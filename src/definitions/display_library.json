[
  {
    "name": "ActivateDisplay",
    "helpId": "ActivateDisplay",
    "shortDescription": "activate a display",
    "version": "4.5",
    "synopsis": "ActivateDisplay(id[, nofront])",
    "functionDocs": "This command can be used to activate the specified display. Activating a display just means that Hollywood tells the window manager of the host operating system to give the focus to this display. Activating a display does not make the display the current output device for Hollywood's graphics library. If you want to select a display, as the current output device, you have to use [SelectDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/SelectDisplay_.html) which will also activate the display if you do not explicitly forbid this.\n\nSee [SelectDisplay](https://www.hollywood-mal.com/docs/html/hollywood/SelectDisplay_.html).\n\nStarting with Hollywood 5.0 there is a new optional argument called `nofront`. If you set this to `True`, the display will be activated but it will not be moved to the front of the windows' stacking order. This argument is only handled on AmigaOS compatible systems because active windows in the background are not supported on other operating systems.",
    "inputsDocs": "* `id` — identifier of the display that shall be activated\n* `nofront` — optional: `True` if display should not be brought to the front (defaults to `False` which means pop display to front) (V5.0)",
    "resultsDocs": "none",
    "platforms": ["All"],
    "insertText": "ActivateDisplay(${1:id})"
  },
  {
    "name": "ChangeDisplayMode",
    "helpId": "ChangeDisplayMode",
    "shortDescription": "switch between window and full screen mode",
    "version": "4.5",
    "synopsis": "ChangeDisplayMode(mode[, table])",
    "functionDocs": "This function can be used to change the display mode to the mode specified in the `mode` parameter. This can be one of the following modes:\n\n- `#DISPMODE_FULLSCREEN`: Switch to full screen mode. Note that this will switch the monitor's resolution which might not be supported on all systems. Alternatively, you can also use `#DISPMODE_FULLSCREENSCALE` (see below) which will simply scale the display to the monitor's resolution. If you choose to use `#DISPMODE_FULLSCREEN`, you can pass the desired monitor resolution in the `Width` and `Height` tags of the optional table argument (see below). If you don't set `Width` and `Height`, the best monitor resolution for the display's current dimensions will be chosen automatically. If the display is already in full screen mode and you pass `#DISPMODE_FULLSCREEN` in the `mode` argument, `ChangeDisplayMode()` can be used to change the current monitor resolution to a different one.\n\n- `#DISPMODE_WINDOWED`: Switch to windowed mode. This mode can be used to switch a display back to windowed mode. Obviously, it only makes sense to use this mode on displays which are currently full screen.\n\n- `#DISPMODE_FULLSCREENSCALE`: Switch into scaled full screen mode. This mode will make the display full screen without changing the monitor's resolution. Instead, the display's graphics will be scaled to the monitor's current resolution. Thus, they will fill the whole screen even though the monitor didn't change its resolution. By default, Hollywood's auto scaling engine will be used for scaling but you can set the `LayerScale` tag in the optional table argument (see below) to `True` to use the layer scaling engine instead. See [Scaling engines](https://www.hollywood-mal.com/docs/html/hollywood/AutoScalingInfo_.html). Note, however, that `#DISPMODE_FULLSCREENSCALE` can become quite slow on platforms which don't support hardware-accelerated scaling. (V9.0)\n\n- `#DISPMODE_MODESWITCH`: This switches between display modes. If the display is currently windowed, it will switch to full screen. If the display is currently full screen, it will switch to windowed. Note that the full screen mode chosed by `#DISPMODE_MODESWITCH` can be both, `#DISPMODE_FULLSCREEN` and `#DISPMODE_FULLSCREENSCALE`. `#DISPMODE_MODESWITCH` uses the same logic as the ALT+RETURN hotkey that switches a Hollywood display between full screen and windowed mode. See the documentation of the `ScaleSwitch` tag in the documentation of the [@DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html) preprocessor command for details. See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V9.0)\n\nStarting with Hollywood 6.0 this function accepts an optional table argument which allows you to configure further options:\n\n- `Width`: If `mode` is `#DISPMODE_FULLSCREEN`, this tag can be used to specify the width of the resolution the monitor should be switched to. You can also pass the special constant `#NATIVE` here to indicate that Hollywood should use the monitor's native width.\n\n- `Height`: If `mode` is `#DISPMODE_FULLSCREEN`, this tag can be used to specify the height of the resolution the monitor should be switched to. You can also pass the special constant `#NATIVE` here to indicate that Hollywood should use the monitor's native height.\n\n- `LayerScale`: If `mode` is `#DISPMODE_FULLSCREENSCALE`, this tag can be used to make Hollywood use the layer scaling engine instead of the auto scaling engine. See [Scaling engines](https://www.hollywood-mal.com/docs/html/hollywood/AutoScalingInfo_.html). Defaults to `False`. (V9.0)\n\n- `KeepProportions`: If `mode` is `#DISPMODE_FULLSCREENSCALE`, you can activate proportional scaling by setting this tag to `True`. Defaults to `False`. (V9.0)\n\n- `SmoothScale`: If `mode` is `#DISPMODE_FULLSCREENSCALE`, you can activate interpolated scaling by setting this tag to `True`. Defaults to `False`. (V9.0)\n\n- `Monitor`: This tag allows you to specify the monitor that should be used. Monitors are counted from 1 which is the primary monitor. By default, the monitor currently associated with the active display is used.\n\n- `Backfill`: This tag allows you to configure the backfill setting for this display. The table you have to specify here has to follow the same conventions as its counterpart that can be passed to the `Backfill` tag of the [@DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html) preprocessor command. See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\nNote that starting with Hollywood 6.0 it is possible to have more than one display in full screen mode since Hollywood 6.0 introduces support for multiple monitors. This makes it possible to have several displays running in full screen mode on separate displays.\n\nTo find out whether or not the desired display mode can be handled by the current monitor, use the [GetDisplayModes()](https://www.hollywood-mal.com/docs/html/hollywood/GetDisplayModes_.html) function.",
    "inputsDocs": "* `mode` — mode to switch into (see above)\n* `table` — optional: table configuring further options (see above) (V6.0)",
    "example": "```\nChangeDisplayMode(#DISPMODE_FULLSCREEN, {Width = 1024, Height = 768})\nNPrint(\"We are now in full screen mode. Press left mouse to return\\n\" ..\n   \"to windowed mode.\")\nWaitLeftMouse\nChangeDisplayMode(#DISPMODE_WINDOWED)\nNPrint(\"We are back in windowed mode now.\")\nWaitLeftMouse\n```\n\nThe code above goes into 1024x768 full screen mode, waits for left mouse button to be pressed and then returns to windowed mode again.",
    "platforms": ["All"],
    "insertText": "ChangeDisplayMode(${1:mode})"
  },
  {
    "name": "ChangeDisplaySize",
    "helpId": "ChangeDisplaySize",
    "shortDescription": "change the dimensions of the current display",
    "version": "1.0",
    "synopsis": "ChangeDisplaySize(width, height[, args])",
    "functionDocs": "This function changes the dimensions of the currently active display to the specified dimensions. The background picture associated with the current display will be scaled to fit the new dimensions. Therefore you can also use this function for scaling background pictures.\n\nNew in V2.0: You can pass `#KEEPASPRAT` as either `width` or `height`. Hollywood will calculate the size then automatically by taking the aspect-ratio of the display into account.\n\nStarting with Hollywood 2.0, `width` and `height` can also be a string containing a percent specification, e.g. \"50%\".\n\nNew in Hollywood 4.0: You can pass a table in the optional third argument to specify further options. Currently, the table can contain the following fields:\n\n- `X`: Specifies the new x-position for the display. If you want the display to keep its current x-position, pass the special constant `#KEEPPOSITION`. Defaults to `#CENTER`.\n\n- `Y`: Specifies the new y-position for the display. If you want the display to keep its current y-position, pass the special constant `#KEEPPOSITION`. Defaults to `#CENTER`.\n\n- `Smooth`: Specifies whether or not the graphics shall be scaled using anti-alias interpolation. Defaults to `False`.\n\nStarting with Hollywood 7.0 you can also pass the special constant `#NATIVE` in the `width` and `height` parameters. In that case, Hollywood will use the dimensions of the display's host device.",
    "inputsDocs": "* `width` — desired new width for the display\n* `height` — desired new height for the display\n* `args` — optional: further configuration options (V4.0)",
    "example": "```\nChangeDisplaySize(320, 240)\n```\n\nThis changes the display size to 320x240.",
    "platforms": ["All"],
    "insertText": "ChangeDisplaySize(${1:width}, ${2:height})"
  },
  {
    "name": "CloseDisplay",
    "helpId": "CloseDisplay",
    "shortDescription": "close a display",
    "version": "4.5",
    "synopsis": "CloseDisplay(id)",
    "functionDocs": "This function closes a currently open display. Please note that it will not free the display. You can still call [SelectDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/SelectDisplay_.html) on it even if it is closed. You can also make it visible again later using [OpenDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/OpenDisplay_.html) if necessary.\n\nIf you do not want to close the display completely but only minimize it, you can use the [HideDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/HideDisplay_.html) command to achieve this. If you want to dispose of a display completely, you have to use the [FreeDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/FreeDisplay_.html) command instead of `CloseDisplay()`.",
    "inputsDocs": "* `id` — identifier of the display to close",
    "resultsDocs": "none",
    "platforms": ["All"],
    "insertText": "CloseDisplay(${1:id})"
  },
  {
    "name": "CreateDisplay",
    "helpId": "CreateDisplay",
    "shortDescription": "create a new display",
    "version": "4.5",
    "synopsis": "[id] = CreateDisplay(id[, table])",
    "functionDocs": "This function can be used to create a new display which you can open using [OpenDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/OpenDisplay_.html). You have to pass an identifier for the new display or [Nil](https://www.hollywood-mal.com/docs/html/hollywood/PrgTypeNil_.html). If you pass [Nil](https://www.hollywood-mal.com/docs/html/hollywood/PrgTypeNil_.html), `CreateDisplay()` will return a handle to the new display which you can then use to refer to this display.\n\nFurthermore, you should pass a table in the second argument to configure the style for the new display. Please note that every display must have a BGPic associated with it. Thus, it is advised that you always specify the `BGPic` tag in the optional table when creating a display. If you do not specify the `BGPic` tag, `CreateDisplay()` will create a new BGPic for the new display automatically. The newly created BGPic will be of the size specified in `Width` and `Height` and it will be filled according to the style specified in `FillStyle`. If you specify the `BGPic` tag, `Width`, `Height` and `FillStyle` are ignored.\n\nAlso note that the same BGPic cannot be associated with multiple displays. Each BGPic must only be associated with a single display. It is not possible to have BGPic 1 associated with display 1 and 2, for example. Simply make a copy of the BGPic using [CopyBGPic()](https://www.hollywood-mal.com/docs/html/hollywood/CopyBGPic_.html) if you need to use a single BGPic with multiple displays.\n\nThe optional table argument recognizes the following tags:\n\n- `BGPic`: Specifies the BGPic that shall be attached to the new display. You need to specify either this tag or the `Width`, `Height` and `FillStyle` tags. See further notes above.\n\n- `Width, Height`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). Ignored if `BGPic` tag is set.\n\n- `X, Y`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `Mode`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `Title`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `Borderless`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `Sizeable`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `Fixed`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `Backfill`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `ScrWidth, ScrHeight`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `ScrDepth`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `NoHide`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `NoModeSwitch`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `NoClose`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `Active`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `HidePointer`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `UseQuartz`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `ScaleMode`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `ScaleWidth, ScaleHeight`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `SmoothScale`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `DragRegion`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `SizeRegion`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `Layers`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `FitScale`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V4.7)\n\n- `KeepProportions`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V4.7)\n\n- `FillStyle`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).. Ignored if `BGPic` tag is set. Defaults to `#FILLCOLOR`. (V5.0)\n\n- `Color`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `TextureBrush`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.0)\n\n- `TextureX, TextureY`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.0)\n\n- `GradientStyle`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.0)\n\n- `GradientAngle`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.0)\n\n- `GradientStartColor, GradientEndColor`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.0)\n\n- `GradientCenterX, GradientCenterY`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.0)\n\n- `GradientBalance`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.0)\n\n- `GradientBorder`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.0)\n\n- `GradientColors`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.0)\n\n- `KeepScreenOn`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.1)\n\n- `PubScreen`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `HideFromTaskbar`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.3)\n\n- `HideOptionsMenu`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.3)\n\n- `Orientation`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.3)\n\n- `DisableBlanker`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V6.0)\n\n- `Menu`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V6.0)\n\n- `Monitor`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V6.0)\n\n- `XServer`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V6.0)\n\n- `ScreenTitle`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V6.0)\n\n- `ScreenName`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V6.0)\n\n- `RememberPosition`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V6.1)\n\n- `Maximized`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V7.0)\n\n- `TrapRMB`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V7.0)\n\n- `NoScaleEngine`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V7.0)\n\n- `NoLiveResize`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V7.0)\n\n- `NativeUnits`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V7.0)\n\n- `AlwaysOnTop`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V7.1)\n\n- `NoCyclerMenu`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V8.0)\n\n- `HideTitleBar`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V8.0)\n\n- `Subtitle`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V8.0)\n\n- `SingleMenu`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V8.0)\n\n- `ScaleFactor`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V8.0)\n\n- `ImmersiveMode`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V9.0)\n\n- `Palette`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V9.0)\n\n- `FillPen`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V9.0)\n\n- `SoftwareRenderer`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V9.0)\n\n- `VSync`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V9.0)\n\n- `ScaleSwitch`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V9.0)\n\n- `UserTags`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V10.0)\n\nAfter the display has been successfully created, you can open it by calling [OpenDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/OpenDisplay_.html), you can draw to it by using [SelectDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/SelectDisplay_.html) and you can close it using [CloseDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/CloseDisplay_.html).\n\nSee [SelectDisplay](https://www.hollywood-mal.com/docs/html/hollywood/SelectDisplay_.html).\n\nThis command is also available from the preprocessor: Use [@DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html) to create displays at startup time!",
    "inputsDocs": "* `id` — identifier for the display or [Nil](https://www.hollywood-mal.com/docs/html/hollywood/PrgTypeNil_.html) for [auto id select](https://www.hollywood-mal.com/docs/html/hollywood/AutoIDSelect_.html)\n* `table` — optional: further configuration options for loading operation",
    "resultsDocs": "* `id` — optional: identifier of the new display; will only be returned when you pass [Nil](https://www.hollywood-mal.com/docs/html/hollywood/PrgTypeNil_.html) as argument 1 (see above)",
    "example": "```\nCreateDisplay(2, {BGPic = 2, Active = True})\nOpenDisplay(2)\nNPrint(\"Hello World\")\n```\n\nThe code above creates a new display and attaches BGPic number 2 to it. The display will inherit the size and graphics from BGPic. Then we open the display and print \"Hello World\" into it.\n\n---\n\n```\nCreateDisplay(2, {Width = 800, Height = 600, Borderless = True,\n   Color = #WHITE, Active = True})\nOpenDisplay(2)\n```\n\nThe code above creates and opens a 800x600 borderless display with white background. Because we did not specify a BGPic for this display, `CreateDisplay()` will create one automatically and attach it to the new display. You can get a handle to the automatically created BGPic by querying `#ATTRBGPIC` on the new display using [GetAttribute()](https://www.hollywood-mal.com/docs/html/hollywood/GetAttribute_.html).",
    "platforms": ["All"],
    "insertText": "CreateDisplay(${1:id})"
  },
  {
    "name": "FreeDisplay",
    "helpId": "FreeDisplay",
    "shortDescription": "free a display",
    "version": "4.5",
    "synopsis": "FreeDisplay(id)",
    "functionDocs": "This function closes the specified display and frees all of its resources. When `FreeDisplay()` returns, the specified display will be no longer available.\n\nPlease note that you cannot call this on the current display. You must select an other display using [SelectDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/SelectDisplay_.html) first before you can call `FreeDisplay()`. This is because Hollywood always requires a current display. Freeing the current display would lead to a non-existent current display and this is not supported by Hollywood. There always must be a display that is the current one. Even if all displays are closed and there is no visible display at all, Hollywood will internally still have a current display that can handle calls that draw graphics.",
    "inputsDocs": "* `id` — identifier of the display to free; must not be the current display",
    "resultsDocs": "none",
    "platforms": ["All"],
    "insertText": "FreeDisplay(${1:id})"
  },
  {
    "name": "GetDisplayModes",
    "helpId": "GetDisplayModes",
    "shortDescription": "return available display modes",
    "version": "5.0",
    "synopsis": "t = GetDisplayModes([monitor])",
    "functionDocs": "This function can be used to find out all display modes supported by the specified monitor. `GetDisplayModes()` will then store all supported modes in a table and return it to you. The table returned by this function is a collection of a number of sub-tables that all have `Width` and `Height` elements initialized.\n\nThis function is useful for finding out if a specific display mode is actually supported by this system before trying to switch to this mode using the [ChangeDisplayMode()](https://www.hollywood-mal.com/docs/html/hollywood/ChangeDisplayMode_.html) command.",
    "inputsDocs": "* `monitor` — optional: monitor whose display modes shall be queried (defaults to 1 which means query the primary monitor) (V6.0)",
    "resultsDocs": "* `t` — a collection of all available display modes",
    "example": "```\nt = GetDisplayModes()\nFor Local k = 0 To ListItems(t) - 1\n   DebugPrint(\"Mode\", k + 1, \"Width:\", t[k].Width, \"Height:\", t[k].Height)\nNext\n```\n\nThe code above queries the display mode database and then prints all available modes.",
    "platforms": ["All"],
    "insertText": "GetDisplayModes()"
  },
  {
    "name": "GetMonitors",
    "helpId": "GetMonitors",
    "shortDescription": "return information about available monitors",
    "version": "6.0",
    "synopsis": "t = GetMonitors()",
    "functionDocs": "This function can be used to obtain information about all monitors currently available to the system. A table will be returned that contains a number of subtables describing each individual monitor's dimensions and the position of this monitor on the desktop screen.\n\nPlease note that the way the monitor positions on the desktop screen are described is platform-dependent. See [Multi-monitor support](https://www.hollywood-mal.com/docs/html/hollywood/MultiMonitorInfo_.html).",
    "inputsDocs": "none",
    "resultsDocs": "* `t` — a collection of all available monitors and their desktop alignment",
    "example": "```\nt = GetMonitors()\nFor Local k = 0 To ListItems(t) - 1\n   DebugPrint(\"Monitor\", k + 1, \"X:\", t[k].X, \"Y:\", t[k].Y,\n        \"Width:\", t[k].Width, \"Height:\", t[k].Height)\nNext\n```\n\nThe code above queries the operating system's monitor database and then prints information about all available monitors.",
    "platforms": ["All"],
    "insertText": "GetMonitors()"
  },
  {
    "name": "HideDisplay",
    "helpId": "HideDisplay",
    "shortDescription": "minimize the current display",
    "version": "3.0",
    "synopsis": "HideDisplay([toback])",
    "functionDocs": "This function minimizes the current display. The script execution will continue while the display is minimized. You can use the [ShowDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/ShowDisplay_.html) command to bring a minimized display back to the front.\n\nIf you want to close the display instead of minimizing it, use the [CloseDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/CloseDisplay_.html) command instead.\n\nStarting with Hollywood 8.0, there is an optional argument named `toback`, which is only supported on AmigaOS and compatible systems. If you set it to `True`, the display won't be minimized, but instead it will be hidden by moving it all the way to the bottom of the current screen's window stack, i.e. all other windows will appear in front of it then.",
    "inputsDocs": "* `toback` — optional: whether to hide the window by moving it to the bottom of the window stack instead of minimizing it; this is only supported on AmigaOS and compatible systems (defaults to `False`) (V8.0)",
    "example": "```\nHideDisplay()\nWait(100)\nShowDisplay()\n```\n\nThis code hides the display, waits two seconds, and pops up the display again.",
    "platforms": ["All"],
    "insertText": "HideDisplay()"
  },
  {
    "name": "MoveDisplay",
    "helpId": "MoveDisplay",
    "shortDescription": "move the display to a new position on the host screen",
    "version": "2.0",
    "synopsis": "MoveDisplay(x, y)",
    "functionDocs": "This function moves the display to the new position specified by `x` and `y`. You can also use Hollywood's special coordinate constants here. To find out which x- and y-positions are valid, you can query the `#ATTRMAXWIDTH` and `#ATTRMAXHEIGHT` attributes with [GetAttribute()](https://www.hollywood-mal.com/docs/html/hollywood/GetAttribute_.html).\n\nThe initial position of the display can be set with the [@DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html) preprocessor command.",
    "inputsDocs": "* `x` — new x-position for the display\n* `y` — new y-position for the display",
    "example": "```\nMoveDisplay(#LEFT, #TOP)\n```\n\nThis moves the display to the top-left of the screen",
    "platforms": ["All"],
    "insertText": "MoveDisplay(${1:x}, ${2:y})"
  },
  {
    "name": "OpenDisplay",
    "helpId": "OpenDisplay",
    "shortDescription": "open a display",
    "version": "4.5",
    "synopsis": "OpenDisplay(id[, table])",
    "functionDocs": "This function will open a display previously created using [CreateDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/CreateDisplay_.html) and make it visible. Starting with Hollywood 6.0 this function accepts an optional table argument which can be used to configure some advanced options. The following tags are currently recognized by the optional table argument:\n\n- `Mode`: This tag allows you to specify the mode the display should be opened in. You have to pass one of the following strings to this tag:\n\n  - `\"Windowed\"` Open display in windowed mode.\n\n  - `\"FullScreen\"` Open in full screen mode. This can change your monitor's resolution to the dimensions which fit best to your display's dimensions. If you don't want that, take a look at the `FullScreenScale` and `FakeFullScreen` modes below.\n\n  - `\"FullScreenScale\"` This is a special full screen mode which won't change your monitor's resolution. Instead, Hollywood's display will be resized to fit your monitor's dimensions. Additionally, this full screen mode will activate the auto scaling engine so that your display is automatically scaled to fit your monitor's dimensions. `FullScreenScale` will use auto scaling by default. If you would like it to use layer scaling, you have to set `ScaleMode` to `#SCALEMODE_LAYER` as well. `FullScreenScale` is especially useful on mobile devices whose display hardware has a hard-coded resolution and doesn't support resolution changes in the same way as an external monitor connected to a desktop computer does. The downside of `FullScreenScale` is that it is slower because Hollywood has to scale all rendering operations to the monitor's dimensions. (V7.0)\n\n  - `\"FakeFullScreen\"` Open in fake full screen mode. This means that Hollywood will not change the monitor's resolution but the backfill window will be configured to shield the desktop completely. Thus, the user gets the impression as if Hollywood was running full screen, although it is running on the desktop.\n\n  - `\"ModeRequester\"` This will open a display mode requester allowing the user to choose the desired full screen mode for this display.\n\n  - `\"Ask\"` This will open a requester asking the user to choose between windowed and full screen mode.\n\n  By default, `OpenDisplay()` will use the mode that was specified when creating the display.\n\n- `ScrWidth, ScrHeight`: If `Mode` has been set to `FullScreen`, these tags allow you to set the desired dimensions for the full screen mode. Defaults to what has been set when creating the display. Starting with Hollywood 7.0 you can also set these tags to the special constant `#NATIVE`. In that case, Hollywood will use the dimensions of the display's host device.\n\n- `ScrDepth`: If `Mode` has been set to `FullScreen`, this tag allows you to set the desired depth for the full screen mode. Defaults to what has been set when creating the display.\n\n- `Backfill`: This tag allows you to configure the backfill setting for this display. The table you have to specify here has to follow the same conventions as its counterpart that can be passed to the `Backfill` tag of the [@DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html) preprocessor command. See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `NoSelect`: This tag allows you to specify whether or not the newly opened display shall be selected as the current output device. `NoSelect` defaults to `False` which means that by default, `OpenDisplay()` will open the specified display and select it as the current output device. If you do not want this behaviour, pass `True` in `NoSelect`. In that case, you need to manually call [SelectDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/SelectDisplay_.html) before you can draw into the display.\n\n- `Monitor`: This tag allows you to specify the monitor this display should be opened on. Monitors are counted from 1 to the number of monitors available to the system. Please note that if you set this tag, functions that accept display coordinates, e.g. [MoveDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/MoveDisplay_.html), will interpret them as values relative to the origin of the monitor specified in the `Monitor` tag. This tag defaults to what has been set when creating the display.\n\n- `XServer`: This tag can be used to specify the X Server that should open this display. By default, Hollywood will use the X Server that has been specified when creating the display. This tag is only available in the Linux version of Hollywood.\n\n- `PubScreen`: This tag can be used to specify the public screen this display should be opened on. You have to pass a string that contains the name of the public screen to use here. By default, Hollywood will use the public screen specified when creating the display. This tag is only supported on AmigaOS compatible operating systems.\n\n- `ScreenName`: If this display is to be opened in full screen mode, you can set the desired public screen name of the display's own screen with this tag. By default, Hollywood will use the screen name specified when creating the display. This tag is only available in the AmigaOS compatible versions of Hollywood.",
    "inputsDocs": "* `id` — identifier of the display to open\n* `table` — optional: table argument containing further options (see above) (V6.0)",
    "example": "See [CreateDisplay](https://www.hollywood-mal.com/docs/html/hollywood/CreateDisplay_.html)",
    "platforms": ["All"],
    "insertText": "OpenDisplay(${1:id})"
  },
  {
    "name": "RefreshDisplay",
    "helpId": "RefreshDisplay",
    "shortDescription": "force display refresh",
    "version": "9.0",
    "synopsis": "RefreshDisplay([t])",
    "functionDocs": "This command can be used to force the current display to refresh itself. It is normally not needed to call this function as display refresh is handled by Hollywood automatically. This function is only here for debugging purposes. The optional table argument can be used to pass additional options but this is currently just for internal use and not publicly documented.",
    "inputsDocs": "* `t` — optional: table containing further options",
    "resultsDocs": "none",
    "platforms": ["All"],
    "insertText": "RefreshDisplay()"
  },
  {
    "name": "SelectDisplay",
    "helpId": "SelectDisplay",
    "shortDescription": "select a display as output device",
    "version": "4.5",
    "synopsis": "SelectDisplay(id[, noactivate])",
    "functionDocs": "This function makes the display specified by `id` the current display. The current display is the display that all commands of Hollywood's graphics library draw to. Furthermore, several other functions refer to the current display; for example, [WaitLeftMouse()](https://www.hollywood-mal.com/docs/html/hollywood/WaitLeftMouse_.html) will wait for the left mouse button to be clicked in the currently active display, and [SetPointer()](https://www.hollywood-mal.com/docs/html/hollywood/SetPointer_.html) will change the mouse pointer of the currently active display.\n\nThe optional argument `noactivate` specifies whether or not the display shall also be activated. This argument defaults to `False` which means that by default, the specified display is made the current display and it is also activated. Make sure you understand the difference between the current display and the active display: The current display is not necessarily the active display and vice versa. The active display has nothing to do with Hollywood itself. It just means that the window manager of the host OS will highlight the display and make it the active one. Active windows will also get the keyboard focus and on some operating systems active windows are always put to the front. The current display on the other hand is the display that Hollywood commands use to draw their graphics to. Thus, you could also turn an inactive display into the current display. Hence, you should keep in mind that this function makes the specified display the current display. Optionally, it activates the display, too. If you only want to activate a display without making it the current one, [ActivateDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/ActivateDisplay_.html) is the proper function for you.\n\nAlso note that Hollywood always requires a current display. It is not possible to create a Hollywood script that runs without a current display. You can, however, create the illusion of a Hollywood script without a current display. By using [CloseDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/CloseDisplay_.html) you can close all displays (or use the `Hidden` tag in [@DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html)). It will then seem as if there was no current display but that is a wrong assumption. There is still a current display; it is just not visible. Even if all displays are closed, you will still be able to call functions like [DisplayBrush()](https://www.hollywood-mal.com/docs/html/hollywood/DisplayBrush_.html). They will still draw their graphics to the display, even if it is currently not visible. That is why you can also call `SelectDisplay()` on closed displays.\n\nMake sure that you do not confuse `SelectDisplay()` with the similarly named functions [SelectBrush()](https://www.hollywood-mal.com/docs/html/hollywood/SelectBrush_.html), [SelectBGPic()](https://www.hollywood-mal.com/docs/html/hollywood/SelectBGPic_.html), [SelectAnim()](https://www.hollywood-mal.com/docs/html/hollywood/SelectAnim_.html), [SelectMask()](https://www.hollywood-mal.com/docs/html/hollywood/SelectMask_.html), and [SelectAlphaChannel()](https://www.hollywood-mal.com/docs/html/hollywood/SelectAlphaChannel_.html). All of these functions require you to call [EndSelect()](https://www.hollywood-mal.com/docs/html/hollywood/EndSelect_.html) when you are done with them, but `SelectDisplay()` does not have this requirement. In fact, it works in a completely different way so you must never call [EndSelect()](https://www.hollywood-mal.com/docs/html/hollywood/EndSelect_.html) for `SelectDisplay()`. If you want to return to the previously current display, you must call `SelectDisplay()` again. Calling [EndSelect()](https://www.hollywood-mal.com/docs/html/hollywood/EndSelect_.html) to restore the previously current display will definitely not work.\n\nIf you call `SelectDisplay()` when [SelectBrush()](https://www.hollywood-mal.com/docs/html/hollywood/SelectBrush_.html) (or one of its related commands) is active, Hollywood will internally call [EndSelect()](https://www.hollywood-mal.com/docs/html/hollywood/EndSelect_.html) first to finish the [SelectBrush()](https://www.hollywood-mal.com/docs/html/hollywood/SelectBrush_.html) operation. After that, `SelectDisplay()` will switch the current display.\n\nDouble-buffering modes are not cancelled by `SelectDisplay()`. You can safely take the focus away from a double buffered display using `SelectDisplay()`, make some changes in another display, and then return to the double-buffered display. Double-buffered modes are fully preserved by `SelectDisplay()`.\n\nAlso note that [OpenDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/OpenDisplay_.html) will always automatically select the specified display as the current one, except when you specify use the optional argument to tell it not to do so. Thus, when using [OpenDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/OpenDisplay_.html) you normally do not have to call `SelectDisplay()` at all. `SelectDisplay()` is only needed when selecting a display as the current one that is already open.",
    "inputsDocs": "* `id` — identifier of the display to select as the current display\n* `noactivate` — optional: set this to `True` if the display shall not be activated by this function (defaults to `False`)",
    "resultsDocs": "none",
    "platforms": ["All"],
    "insertText": "SelectDisplay(${1:id})"
  },
  {
    "name": "SetDisplayAttributes",
    "helpId": "SetDisplayAttributes",
    "shortDescription": "change attributes of current display",
    "version": "4.5",
    "synopsis": "SetDisplayAttributes(table)",
    "functionDocs": "This function can be used to change one or several window attributes of the current display with a single function call. It is a very powerful function that gives you the utmost flexibility for dealing with your displays. Almost all attributes of the display can be changed on the fly using this function. For example, you can make a display sizeable or borderless with this function.\n\nYou have to pass a table containing a collection of attributes that you want to modify to this function.\n\nHere is a list of display attributes that you can modify using this function:\n\n- `BGPic`: Allows you to exchange the BGPic currently associated with this display. This is basically the same as calling [DisplayBGPic()](https://www.hollywood-mal.com/docs/html/hollywood/DisplayBGPic_.html). The advantage of exchanging BGPics with `SetDisplayAttributes()` is that you can change other display attributes at the same time. To exchange the BGPic for this display, simply pass the identifier of the new BGPic in this tag.\n\n- `Width, Height`: These allow you to change the dimensions of the current display. This is the same as calling [ChangeDisplaySize()](https://www.hollywood-mal.com/docs/html/hollywood/ChangeDisplaySize_.html). You can specify either a direct value of a string containing a percentage specification (e.g \"200%\"). Starting with Hollywood 7.0 you can also set these tags to the special constant `#NATIVE`. In that case, Hollywood will use the dimensions of the display's host device.\n\n- `X, Y`: Allows you to change the position of the current display. This is the same as calling [MoveDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/MoveDisplay_.html). You can either specify a direct value or one of Hollywood's special [coordinate constants](https://www.hollywood-mal.com/docs/html/hollywood/PrgInbuiltCst_.html).\n\n- `Title`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `Borderless`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `Sizeable`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `Fixed`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `NoHide`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `NoModeSwitch`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `NoClose`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `HidePointer`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `ScaleMode`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `ScaleWidth, ScaleHeight`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `SmoothScale`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `DragRegion`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `SizeRegion`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html).\n\n- `PubScreen`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `FillStyle`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `Color`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `TextureBrush`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `TextureX, TextureY`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `GradientStyle`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `GradientAngle`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `GradientStartColor, GradientEndColor`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `GradientCenterX, GradientCenterY`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `GradientBalance`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `GradientBorder`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `GradientColors`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.2)\n\n- `HideFromTaskbar`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.3)\n\n- `HideOptionsMenu`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.3)\n\n- `Orientation`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V5.3)\n\n- `Menu`: This tag can be used to attach a menu strip to the current display. You have to pass the identifier of a menu strip that has been created using the [@MENU](https://www.hollywood-mal.com/docs/html/hollywood/atMENU_.html) preprocessor command or the [CreateMenu()](https://www.hollywood-mal.com/docs/html/hollywood/CreateMenu_.html) function to this tag. If you pass the special value -1 here, the currently attached menu strip will be removed from the display. See [MENU](https://www.hollywood-mal.com/docs/html/hollywood/atMENU_.html). (V6.0)\n\n- `Monitor`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V6.0)\n\n- `XServer`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V6.0)\n\n- `ScreenTitle`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V6.0)\n\n- `ScreenName`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V6.0)\n\n- `RememberPosition`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V7.0)\n\n- `HideTitleBar`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V9.0)\n\n- `ImmersiveMode`: See [DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html). (V9.0)",
    "inputsDocs": "* `table` — a table containing a collection of attributes that shall be modified in the current BGPic; see the list above",
    "example": "```\nSetDisplayAttributes({Borderless = True, Sizeable = True})\n```\n\nThe code above makes the current display borderless and sizeable.",
    "platforms": ["All"],
    "insertText": "SetDisplayAttributes(${1:table})"
  },
  {
    "name": "SetSubtitle",
    "helpId": "SetSubtitle",
    "shortDescription": "set subtitle of current display",
    "version": "8.0",
    "synopsis": "SetSubtitle(subtitle$)",
    "functionDocs": "This function changes the subtitle of the currently active display to the new subtitle specified in `subtitle$`. The subtitle is shown in the action bar below the display's title, which can be set using [SetTitle()](https://www.hollywood-mal.com/docs/html/hollywood/SetTitle_.html). To remove the subtitle, pass an empty string in `subtitle$`. By default, there is no subtitle at all.\n\nAlternatively, you can also set the subtitle in the [@DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html) preprocessor command or when creating the display using [CreateDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/CreateDisplay_.html).",
    "inputsDocs": "* `subtitle$` — new subtitle for display",
    "example": "```\nSetSubtitle(\"Written by Andreas Falkenhahn\")\n```\n\nThe above code changes the subtitle to \"Written by Andreas Falkenhahn\".",
    "platforms": ["Android"],
    "insertText": "SetSubtitle(${1:subtitle$})"
  },
  {
    "name": "SetTitle",
    "helpId": "SetTitle",
    "shortDescription": "change the title of the current display",
    "version": "1.0",
    "synopsis": "SetTitle(title$)",
    "functionDocs": "This function changes the title of the currently active display to the new title specified in `title$`. This is only useful for changing the title while the script is running. If you want to give your application a global title, just use the [@DISPLAY](https://www.hollywood-mal.com/docs/html/hollywood/atDISPLAY_.html) preprocessor command.",
    "inputsDocs": "* `title$` — new window title",
    "example": "```\nSetTitle(\"My cool program\")\n```\n\nThe above code changes the window title to \"My cool program\".",
    "platforms": ["Android"],
    "insertText": "SetTitle(${1:title$})"
  },
  {
    "name": "ShowDisplay",
    "helpId": "ShowDisplay",
    "shortDescription": "show minimized display",
    "version": "3.0",
    "synopsis": "ShowDisplay()",
    "functionDocs": "This function unminimizes the current display and brings it back to the front. The display must have been minimized previously either using the [HideDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/HideDisplay_.html) command or by the user using the window's minimize button.\n\nNote that you cannot use this function to show a display that is closed. If the display is closed, you need to use [OpenDisplay()](https://www.hollywood-mal.com/docs/html/hollywood/OpenDisplay_.html).",
    "inputsDocs": "none",
    "example": "See [HideDisplay](https://www.hollywood-mal.com/docs/html/hollywood/HideDisplay_.html)",
    "platforms": ["Android"],
    "insertText": "ShowDisplay()"
  }
]
