[
  {
    "name": "AllocConsoleColor",
    "helpId": "AllocConsoleColor",
    "shortDescription": "allocate console color",
    "version": "10.0",
    "synopsis": "col = AllocConsoleColor(color)",
    "functionDocs": "This function allocates the color specified by `color` for the current console and returns it. You can then make it the active color by passing it to functions like [SetConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleColor_.html). Color allocation is necessary because by default only a few predefined ANSI colors like `#BLACK`, `#WHITE`, `#RED`, etc. are available. If you want to use custom colors, you need to allocate them first.\n\nWhen you're done with a color allocated by this function, call [FreeConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/FreeConsoleColor_.html) to a free the color. This is important to make sure that you don't run out of colors.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `color` — color to allocate; this must be passed as an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html)",
    "resultsDocs": "* `col` — allocated color",
    "example": "```\nEnableAdvancedConsole()\nSetConsoleColor(1, AllocConsoleColor($FFA500))\nConsolePrint(\"Hello World\")\nRefreshConsole()\n```\n\nThe code above prints the string \"Hello World\" in orange. Note that under normal circumstances you should free the console color when you're done with it. This part has been left out for readability reasons.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "AllocConsoleColor(${1:color})"
  },
  {
    "name": "BeepConsole",
    "helpId": "BeepConsole",
    "shortDescription": "beep console",
    "version": "10.0",
    "synopsis": "BeepConsole()",
    "functionDocs": "This function sounds the audible bell on the terminal. If that's not possible, it calls [FlashConsole()](https://www.hollywood-mal.com/docs/html/hollywood/FlashConsole_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "BeepConsole()"
  },
  {
    "name": "ClearConsole",
    "helpId": "ClearConsole",
    "shortDescription": "clear console",
    "version": "10.0",
    "synopsis": "ClearConsole()",
    "functionDocs": "This function clears the console by copying the current background character set using [SetConsoleBackground()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleBackground_.html) to every cell of the window. `ClearConsole()` will also set the `Clear` flag from the [SetConsoleOptions()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html) command to `True` for the current window to ensure that the window is cleared on the next refresh. If you don't want that, use [EraseConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EraseConsole_.html) instead. See [EraseConsole](https://www.hollywood-mal.com/docs/html/hollywood/EraseConsole_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "ClearConsole()"
  },
  {
    "name": "ClearConsoleStyle",
    "helpId": "ClearConsoleStyle",
    "shortDescription": "clear console style",
    "version": "10.0",
    "synopsis": "ClearConsoleStyle(style)",
    "functionDocs": "This function clears the specified style(s) in the current console window. The `style` parameter can be one or more of the console style flags as described in the [SetConsoleStyle()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleStyle_.html) documentation. See [SetConsoleStyle](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleStyle_.html). Since all style flags are bit masks you can combine multiple styles using the bitwise OR operator (`|`).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `style` — one or more style flags to clear",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "ClearConsoleStyle(${1:style})"
  },
  {
    "name": "CloseConsole",
    "helpId": "CloseConsole",
    "shortDescription": "close console window",
    "version": "10.0",
    "synopsis": "CloseConsole()",
    "functionDocs": "This closes a console window previously opened using [OpenConsole()](https://www.hollywood-mal.com/docs/html/hollywood/OpenConsole_.html). This is only supported on Windows because only Windows distinguishes between non-console and console programs. See [OpenConsole](https://www.hollywood-mal.com/docs/html/hollywood/OpenConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Windows"],
    "insertText": "CloseConsole()"
  },
  {
    "name": "ConsolePrint",
    "helpId": "ConsolePrint",
    "shortDescription": "print to console",
    "version": "8.0",
    "synopsis": "ConsolePrint(...)",
    "functionDocs": "This function prints all arguments you specify to the console. You can specify as many arguments as you like and they may be of any type. If you pass multiple arguments to this function, they will be printed with a space to separate them.\n\n`ConsolePrint()` will also automatically append a newline character to the end of its output. If you don't want that, use [ConsolePrintNR()](https://www.hollywood-mal.com/docs/html/hollywood/ConsolePrintNR_.html) instead. See [ConsolePrintNR](https://www.hollywood-mal.com/docs/html/hollywood/ConsolePrintNR_.html).",
    "inputsDocs": "* `...` — at least one value to print to the console",
    "example": "```\nConsolePrint(\"The user entered\", name$, \"as his name and\", age,\n           \"as his age!\")\n```",
    "platforms": ["Windows"],
    "insertText": "ConsolePrint()"
  },
  {
    "name": "ConsolePrintNR",
    "helpId": "ConsolePrintNR",
    "shortDescription": "print to console without newline",
    "version": "8.0",
    "synopsis": "ConsolePrintNR(...)",
    "functionDocs": "This does the same as [ConsolePrint()](https://www.hollywood-mal.com/docs/html/hollywood/ConsolePrint_.html) but doesn't append a new line character to the string.\n\nSee [ConsolePrint](https://www.hollywood-mal.com/docs/html/hollywood/ConsolePrint_.html).",
    "inputsDocs": "* `...` — at least one value to print to the console",
    "example": "```\nConsolePrintNR(\"Hello \")\nConsolePrintNR(\"World!\")\nConsolePrintNR(\"\\n\")\n```\n\nThis does the same as `ConsolePrint(\"Hello World!\")`.",
    "platforms": ["Windows"],
    "insertText": "ConsolePrintNR()"
  },
  {
    "name": "ConsolePrompt",
    "helpId": "ConsolePrompt",
    "shortDescription": "read user input from console",
    "version": "8.0",
    "synopsis": "s$ = ConsolePrompt(p$)",
    "functionDocs": "This function can be used to prompt the user to enter a string in the console. `ConsolePrompt()` will present the string specified in `p$` as the prompt and halt the script's execution until the user has entered a string and confirmed his input using the RETURN key. The string will then be returned by this function.",
    "inputsDocs": "* `p$` — prompt to present to the user",
    "resultsDocs": "* `s$` — string entered by user",
    "example": "```\nname$ = ConsolePrompt(\"What is your name? \")\nage$ = ConsolePrompt(\"And your age? \")\nhome$ = ConsolePrompt(\"Where do you live? \")\nConsolePrint(\"Your name is\", name$, \"and you are\", age$,\n           \"years old and live in\", home$, \"!\")\n```\n\nThe code above demonstrates the usage of the `ConsolePrompt()` function.",
    "platforms": ["Windows"],
    "insertText": "ConsolePrompt(${1:p$})"
  },
  {
    "name": "CopyConsoleWindow",
    "helpId": "CopyConsoleWindow",
    "shortDescription": "copy text from another console window",
    "version": "10.0",
    "synopsis": "CopyConsoleWindow(id[, overlay, srcx, srcy, dstx1, dsty1, dstx2, dsty2])",
    "functionDocs": "This function copies the text from the console window specified by `id` to the currently active console window. If the `overlay` parameter is `True`, only non-blank characters are copied, i.e. all whitespace characters are ignored. If the optional arguments after `overlay` are left out, only those characters in the source window that intersect with the destination window are copied, so that the characters appear in the same physical position on the screen.\n\nIf you specify the optional arguments after `overlay`, the two windows needn't overlap. The arguments `srcx` and `srcy` specify the top left corner of the region to be copied. The arguments `dstx1`, `dsty1`, `dstx2`, and `dsty2` specify the region within the destination window to copy to. All positions must be given in characters.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `id` — id of the console window to copy from\n* `overlay` — optional: whether or not only non-blank characters should be skipped (defaults to `False`)\n* `srcx1` — optional: x offset in the source console window\n* `srcy1` — optional: y offset in the source console window\n* `dstx1` — optional: destination start x offset\n* `dsty1` — optional: destination start y offset\n* `dstx2` — optional: destination end x offset\n* `dsty2` — optional: destination end y offset",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "CopyConsoleWindow(${1:id})"
  },
  {
    "name": "CreateConsoleWindow",
    "helpId": "CreateConsoleWindow",
    "shortDescription": "create a new console window",
    "version": "10.0",
    "synopsis": "[id] = CreateConsoleWindow(id, cols, rows, x, y[, parent, rel])",
    "functionDocs": "This function creates a new window with the given number of columns and rows. The upper left corner of the window is at the coordinates specified by `x` and `y`. To create a new full-screen window, just set `cols`, `rows`, `x` and `y` all to 0. The new window will be given the identifier specified in `id`. If you pass [Nil](https://www.hollywood-mal.com/docs/html/hollywood/PrgTypeNil_.html) in `id`, `CreateConsoleWindow()` will automatically choose an identifier and return it.\n\nIf you set the `parent` argument to the identifier of an existing console window, the specified window will be set as the parent of the new console window so that the new console window will become a subwindow. You can pass -1 in `parent` to set the default console window as the parent. If you set `rel` to `True`, the `x` and `y` coordinates will be interpreted as relative to the parent window's origin instead of relative to the screen's origin.\n\nOnce you have created the console window, you can then use [SelectConsoleWindow()](https://www.hollywood-mal.com/docs/html/hollywood/SelectConsoleWindow_.html) to make it the active console window. See [SelectConsoleWindow](https://www.hollywood-mal.com/docs/html/hollywood/SelectConsoleWindow_.html).\n\nNote that a console window is not the same as a window on your desktop. A console window merely is a certain area in the console that is regarded as an own window. This makes it easier to create textual user interfaces because you can divide your console screen into several windows and then all drawing is automatically clipped at the window edges.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `id` — id for the console window or [Nil](https://www.hollywood-mal.com/docs/html/hollywood/PrgTypeNil_.html) for [auto id selection](https://www.hollywood-mal.com/docs/html/hollywood/AutoIDSelect_.html)\n* `cols` — number of columns for the window\n* `rows` — number of rows for the window\n* `x` — left window offset\n* `y` — top window offset\n* `parent` — optional: identifier of a console window to be used as a parent (defaults to -1 which means the screen is the parent)\n* `rel` — optional: whether or not `x` and `y` specify relative offsets (defaults to `False`)",
    "resultsDocs": "* `id` — optional: identifier of the new console window; will only be returned if you pass [Nil](https://www.hollywood-mal.com/docs/html/hollywood/PrgTypeNil_.html) as argument 1 (see above)",
    "example": "```\nEnableAdvancedConsole()\nw, h = GetConsoleSize()\nCreateConsoleWindow(1, 20, 20, (w - 20) / 2, (h - 20) / 2)\nSelectConsoleWindow(1)\nDrawConsoleBorder()\nRefreshConsole()\n```\n\nThe code above creates a new 20x20 window, draws a border around it and centers it on the screen.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "CreateConsoleWindow(${1:id}, ${2:cols}, ${3:rows}, ${4:x}, ${5:y})"
  },
  {
    "name": "DecomposeConsoleChr",
    "helpId": "DecomposeConsoleChr",
    "shortDescription": "decompose styled character",
    "version": "10.0",
    "synopsis": "ch, style, pen = DecomposeConsoleChr(c)",
    "functionDocs": "This function can be used to extract the individual components of a styled character composed by [MakeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html). You have to pass the styled character in the `c` parameter and `DecomposeConsoleChr()` will return the Unicode codepoint of the character, the styling flags and the pen that should be used to draw the character. See [MakeConsoleChr](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `c` — styled character as composed by [MakeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html)",
    "resultsDocs": "* `ch` — Unicode codepoint of character\n* `style` — console style flags\n* `pen` — pen that shall be used to draw the correct",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "DecomposeConsoleChr(${1:c})"
  },
  {
    "name": "DeleteConsoleChr",
    "helpId": "DeleteConsoleChr",
    "shortDescription": "delete console character",
    "version": "10.0",
    "synopsis": "DeleteConsoleChr()",
    "functionDocs": "This function deletes the character under the cursor in the current window. All characters to the right on the same line are moved to the left one position and the last character on the line is filled with a blank. The cursor position isn't changed.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "DeleteConsoleChr()"
  },
  {
    "name": "DeleteConsoleLine",
    "helpId": "DeleteConsoleLine",
    "shortDescription": "delete console line",
    "version": "10.0",
    "synopsis": "DeleteConsoleLine()",
    "functionDocs": "This function deletes the line under the cursor in the current window. All lines below the current line are moved up one line. The bottom line of the window is cleared. The cursor position does not change.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "DeleteConsoleLine()"
  },
  {
    "name": "DisableAdvancedConsole",
    "helpId": "DisableAdvancedConsole",
    "shortDescription": "stop advanced console mode",
    "version": "10.0",
    "synopsis": "DisableAdvancedConsole()",
    "functionDocs": "This function ends the advanced console mode and puts the console back to normal mode. Ending advanced console mode will also clear the console and restore the original contents from before advanced mode was started on the console.\n\nTo start advanced console mode, call the [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) function.",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "DisableAdvancedConsole()"
  },
  {
    "name": "DrawConsoleBorder",
    "helpId": "DrawConsoleBorder",
    "shortDescription": "draw border to console",
    "version": "10.0",
    "synopsis": "DrawConsoleBorder([ls, rs, ts, bs, tl, tr, bl, br])",
    "functionDocs": "This function draws a border around the edge of the current console window. All arguments must be character codes that specify the character that should be put at the respective position. The `ls` parameter specifies the character to be drawn at the left side of the border, `rs` specifies the right side of the border, `ts` the top side and `bs` the bottom side. The `tl` parameter specifies the character to be drawn in the top left corner of the border, `tr` specifies the top right corner of the border, `bl` the bottom left corner and `br` the bottom right corner. If a parameter is 0, `DrawConsoleBorder()` will use its default character for the specified border position.\n\nCharacters must be passed as numeric values, not as strings. For normal characters this value is simply the Unicode codepoint of the respective character, e.g. 65 for 'A'. You can, however, also pass a special character code composed by the [MakeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html) function. This function allows you to merge text formatting styles into the character code and it also supports special character codes like arrows or border pieces. See [MakeConsoleChr](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `ls` — optional: character for left side of border (defaults to 0)\n* `rs` — optional: character for right side of border (defaults to 0)\n* `ts` — optional: character for top side of border (defaults to 0)\n* `bs` — optional: character for bottom side of border (defaults to 0)\n* `tl` — optional: character for top left corner of border (defaults to 0)\n* `tr` — optional: character for top right corner of border (defaults to 0)\n* `bl` — optional: character for bottom left corner of border (defaults to 0)\n* `br` — optional: character for bottom right corner of border (defaults to 0)",
    "example": "```\nEnableAdvancedConsole()\nDrawConsoleBorder()\nRefreshConsole()\n```\n\nThe code above draws a border using the default characters around the current console window.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "DrawConsoleBorder()"
  },
  {
    "name": "DrawConsoleBox",
    "helpId": "DrawConsoleBox",
    "shortDescription": "draw box to console",
    "version": "10.0",
    "synopsis": "DrawConsoleBox([xc, yc])",
    "functionDocs": "This function draws a box around the edge of the current console window. The `xc` and `yc` arguments must be character codes that specify the character that should be used for the horizontal and vertical frames. If a parameter is 0, `DrawConsoleBox()` will use its default character for the specified border position.\n\nCharacters must be passed as numeric values, not as strings. For normal characters this value is simply the Unicode codepoint of the respective character, e.g. 65 for 'A'. You can, however, also pass a special character code composed by the [MakeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html) function. This function allows you to merge text formatting styles into the character code and it also supports special character codes like arrows or border pieces. See [MakeConsoleChr](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `xc` — optional: character for horizontal frame (defaults to 0)\n* `yc` — optional: character for vertical frame (defaults 0)",
    "example": "```\nEnableAdvancedConsole()\nDrawConsoleBox()\nRefreshConsole()\n```\n\nThe code above draws a box using the default characters around the current console window.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "DrawConsoleBox()"
  },
  {
    "name": "DrawConsoleHLine",
    "helpId": "DrawConsoleHLine",
    "shortDescription": "draw horizontal line to console",
    "version": "10.0",
    "synopsis": "DrawConsoleHLine([ch, n])",
    "functionDocs": "This function draws a horizontal line using the character code specified in `ch`. By default, the line is extended until the end of the window. Alternatively, you can use the `n` parameter to tell `DrawConsoleHLine()` how many characters should be drawn. Passing 0 in `ch` makes `DrawConsoleHLine()` use a default character. The cursor position won't be advanced by this function.\n\nCharacters must be passed as numeric values, not as strings. For normal characters this value is simply the Unicode codepoint of the respective character, e.g. 65 for 'A'. You can, however, also pass a special character code composed by the [MakeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html) function. This function allows you to merge text formatting styles into the character code and it also supports special character codes like arrows or border pieces. See [MakeConsoleChr](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `ch` — optional: character to draw with (defaults to 0)\n* `n` — optional: number of characters to draw (defaults to number of columns)",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "DrawConsoleHLine()"
  },
  {
    "name": "DrawConsoleVLine",
    "helpId": "DrawConsoleVLine",
    "shortDescription": "draw vertical line to console",
    "version": "10.0",
    "synopsis": "DrawConsoleVLine([ch, n])",
    "functionDocs": "This function draws a vertical line using the character code specified in `ch`. By default, the line is extended until the end of the window. Alternatively, you can use the `n` parameter to tell `DrawConsoleVLine()` how many characters should be drawn. Passing 0 in `ch` makes `DrawConsoleVLine()` use a default character. The cursor position won't be advanced by this function.\n\nCharacters must be passed as numeric values, not as strings. For normal characters this value is simply the Unicode codepoint of the respective character, e.g. 65 for 'A'. You can, however, also pass a special character code composed by the [MakeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html) function. This function allows you to merge text formatting styles into the character code and it also supports special character codes like arrows or border pieces. See [MakeConsoleChr](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `ch` — optional: character to draw with (defaults to 0)\n* `n` — optional: number of characters to draw (defaults to number of rows)",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "DrawConsoleVLine()"
  },
  {
    "name": "EnableAdvancedConsole",
    "helpId": "EnableAdvancedConsole",
    "shortDescription": "put console into advanced mode",
    "version": "10.0",
    "synopsis": "EnableAdvancedConsole()",
    "functionDocs": "This function will clear the console screen and put the console into advanced mode. Most functions of the console library require the console to be in advanced mode because things like free cursor positioning, colors, input handling, etc. are not available in standard console mode. Thus, `EnableAdvancedConsole()` is typically the first function to call when you want to have advanced control over the console.\n\nTo go back to normal console mode, call the [DisableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/DisableAdvancedConsole_.html) function.\n\nPlease also read the chapter on [Hollywood and the console](https://www.hollywood-mal.com/docs/html/hollywood/ConsoleUsers_.html) to learn more about using Hollywood in console mode. See [Console mode](https://www.hollywood-mal.com/docs/html/hollywood/ConsoleUsers_.html).",
    "inputsDocs": "none",
    "example": "```\nEnableAdvancedConsole()\nw, h = GetConsoleSize()\ns$ = \"Hello World!\"\nSetConsoleCursor((w - StrLen(s$)) / 2, h / 2)\nConsolePrintNR(s$)\nRefreshConsole()\n```\n\nThe code above prints the string \"Hello World\" centered in the console.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "EnableAdvancedConsole()"
  },
  {
    "name": "EraseConsole",
    "helpId": "EraseConsole",
    "shortDescription": "erase console",
    "version": "10.0",
    "synopsis": "EraseConsole()",
    "functionDocs": "This function clears the console by copying the current background character set using [SetConsoleBackground()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleBackground_.html) to every cell of the window. In contrast to [ClearConsole()](https://www.hollywood-mal.com/docs/html/hollywood/ClearConsole_.html) `EraseConsole()` won't set the `Clear` flag from the [SetConsoleOptions()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html) command to `True` for the current window. If you want that, use [ClearConsole()](https://www.hollywood-mal.com/docs/html/hollywood/ClearConsole_.html) instead. See [ClearConsole](https://www.hollywood-mal.com/docs/html/hollywood/ClearConsole_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "EraseConsole()"
  },
  {
    "name": "FlashConsole",
    "helpId": "FlashConsole",
    "shortDescription": "flash console",
    "version": "10.0",
    "synopsis": "FlashConsole()",
    "functionDocs": "This function flashes the screen, by inverting the foreground and background of every cell, pausing, and then restoring the original attributes.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "FlashConsole()"
  },
  {
    "name": "FormatConsoleLine",
    "helpId": "FormatConsoleLine",
    "shortDescription": "set style and color for several characters",
    "version": "10.0",
    "synopsis": "FormatConsoleLine(n, style[, pen, fgcolor, bgcolor])",
    "functionDocs": "This function sets the specified style and color for the next `n` characters on the current line without changing the existing text, or altering the existing style or color settings. Passing -1 for `n` means to apply the format to all characters until the end of the current line.\n\nAll console styles supported by the [SetConsoleStyle()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleStyle_.html) function can be passed in the `style` parameter. See [SetConsoleStyle](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleStyle_.html). If you don't want to modify any style settings, you can pass the special style `#CONSOLESTYLE_NONE` for `style`. In that case, `FormatConsoleLine()` won't apply any styles.\n\nThe optional parameters `pen`, `fgcolor` and `bgcolor` can be used to change the color of the characters. They can be used in the same way as with [SetConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleColor_.html). See [SetConsoleColor](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleColor_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `n` — number of characters to format or -1 for all character in the current line\n* `style` — formatting style to apply or `#CONSOLESTYLE_NONE` to ignore the argument\n* `pen` — optional: color pen to use or 0 to reset text color to default (defaults to 0)\n* `fgcolor` — optional: desired foreground color for the pen; this must be either an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html) from the list above or a color allocated by [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html) (defaults to `#NOCOLOR`)\n* `bgcolor` — optional: desired background color for the pen; this must be either an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html) from the list above or a color allocated by [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html) (defaults to `#NOCOLOR`)",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "FormatConsoleLine(${1:n}, ${2:style})"
  },
  {
    "name": "FreeConsoleColor",
    "helpId": "FreeConsoleColor",
    "shortDescription": "free console color",
    "version": "10.0",
    "synopsis": "FreeConsoleColor(color)",
    "functionDocs": "This function frees the console color allocated by [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html). It is important to call this function when you no longer need a color to make sure that you don't run out of colors.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `color` — color to free; this must have been allocated by [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html)",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "FreeConsoleColor(${1:color})"
  },
  {
    "name": "FreeConsoleWindow",
    "helpId": "FreeConsoleWindow",
    "shortDescription": "free console window",
    "version": "10.0",
    "synopsis": "FreeConsoleWindow(id)",
    "functionDocs": "This function frees the console window specified by `id`. This must have been allocated by [CreateConsoleWindow()](https://www.hollywood-mal.com/docs/html/hollywood/CreateConsoleWindow_.html) before. See [CreateConsoleWindow](https://www.hollywood-mal.com/docs/html/hollywood/CreateConsoleWindow_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `id` — id of the console window to free",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "FreeConsoleWindow(${1:id})"
  },
  {
    "name": "GetAllocConsoleColor",
    "helpId": "GetAllocConsoleColor",
    "shortDescription": "get allocated color",
    "version": "10.0",
    "synopsis": "color = GetAllocConsoleColor(c)",
    "functionDocs": "This function returns the [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html) of a console color allocated using [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html). You have to pass the color allocated by [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html) in the `c` parameter.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `c` — allocated color to get",
    "resultsDocs": "* `color` — allocated color as an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html)",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "GetAllocConsoleColor(${1:c})"
  },
  {
    "name": "GetConsoleBackground",
    "helpId": "GetConsoleBackground",
    "shortDescription": "get console background",
    "version": "10.0",
    "synopsis": "ch = GetConsoleBackground()",
    "functionDocs": "This function returns the character that is currently used for background filling. This character can be set using [SetConsoleBackground()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleBackground_.html). Note that the character can also be a special character composed by the [MakeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html) function. To decompose such characters into their constituents, you can call the [DecomposeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/DecomposeConsoleChr_.html) function. See [DecomposeConsoleChr](https://www.hollywood-mal.com/docs/html/hollywood/DecomposeConsoleChr_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "* `ch` — character used for filling",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "GetConsoleBackground()"
  },
  {
    "name": "GetConsoleChr",
    "helpId": "GetConsoleChr",
    "shortDescription": "get console character",
    "version": "10.0",
    "synopsis": "ch = GetConsoleChr()",
    "functionDocs": "This function gets the character at the current cursor position and returns it. Note that the character can also be a special character composed by the [MakeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html) function. To decompose such characters into their constituents, you can call the [DecomposeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/DecomposeConsoleChr_.html) function. See [DecomposeConsoleChr](https://www.hollywood-mal.com/docs/html/hollywood/DecomposeConsoleChr_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "* `ch` — character at current cursor position",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "GetConsoleChr()"
  },
  {
    "name": "GetConsoleColor",
    "helpId": "GetConsoleColor",
    "shortDescription": "get console color",
    "version": "10.0",
    "synopsis": "pen, fgcolor, bgcolor = GetConsoleColor([cursor])",
    "functionDocs": "This function returns the active color of the current console window. If the optional argument `cursor` is set to `True`, the color at the current cursor position will be returned. Otherwise the color of the current window will be returned.\n\n`GetConsoleColor()` will return three values: The currently active pen and the current foreground and background colors.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `cursor` — optional: `True` to get the color at the cursor position, `False` to get the color of the current window (defaults to `False`)",
    "resultsDocs": "* `pen` — current color pen\n* `fgcolor` — current foreground color as an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html)\n* `bgcolor` — current background color as an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html)",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "GetConsoleColor()"
  },
  {
    "name": "GetConsoleControlChr",
    "helpId": "GetConsoleControlChr",
    "shortDescription": "get a standard control character",
    "version": "10.0",
    "synopsis": "ch = GetConsoleControlChr(ctrl)",
    "functionDocs": "This function returns the character code of a standard console control character. The following control characters are currently supported and can be passed in the `ctrl` parameter:\n\n- `#CONSOLECHR_KILL`: Returns the KILL character.\n\n- `#CONSOLECHR_ERASE`: Returns the ERASE character.\n\n- `#CONSOLECHR_WORD`: Returns the DELETEWORD character.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `ctrl` — control character to get; must be one from the list above",
    "resultsDocs": "* `ch` — the requested control character in the format of the current terminal",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "GetConsoleControlChr(${1:ctrl})"
  },
  {
    "name": "GetConsoleCursor",
    "helpId": "GetConsoleCursor",
    "shortDescription": "get console cursor position",
    "version": "10.0",
    "synopsis": "x, y = GetConsoleCursor()",
    "functionDocs": "This function returns the cursor position of the current window. The position returned is relative to the upper left corner of the window, which is (0,0).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "* `x` — current x position\n* `y` — current y position",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "GetConsoleCursor()"
  },
  {
    "name": "GetConsoleOrigin",
    "helpId": "GetConsoleOrigin",
    "shortDescription": "get console origin",
    "version": "10.0",
    "synopsis": "x, y = GetConsoleOrigin()",
    "functionDocs": "This function returns the x and y coordinates of the origin of the current console window.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "* `x` — origin x position\n* `y` — origin y position",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "GetConsoleOrigin()"
  },
  {
    "name": "GetConsoleSize",
    "helpId": "GetConsoleSize",
    "shortDescription": "get console dimensions",
    "version": "10.0",
    "synopsis": "cols, rows = GetConsoleSize()",
    "functionDocs": "This function returns the size of the current window. The size is returned as the number of columns and rows available in the current window. A typical terminal size is 80x24, i.e. 24 rows with 80 characters per row.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "* `cols` — number of columns in window\n* `rows` — number of rows in window",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "GetConsoleSize()"
  },
  {
    "name": "GetConsoleStr",
    "helpId": "GetConsoleStr",
    "shortDescription": "read string from console",
    "version": "10.0",
    "synopsis": "s$ = GetConsoleStr()",
    "functionDocs": "This function reads all characters from the current cursor position to the end of the line and returns them as a string.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "* `s$` — string read from console",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "GetConsoleStr()"
  },
  {
    "name": "GetConsoleStyle",
    "helpId": "GetConsoleStyle",
    "shortDescription": "get console style",
    "version": "10.0",
    "synopsis": "style = GetConsoleStyle([cursor])",
    "functionDocs": "This function returns the style of the current console window. If the optional argument `cursor` is set to `True`, the style at the current cursor position will be returned. Otherwise the style for the current window will be returned.\n\nThe `style` return value will be a bitmask of style flags. See [SetConsoleStyle](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleStyle_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `cursor` — optional: `True` to get the style at the cursor position, `False` to get the style for the current window (defaults to `False`)",
    "resultsDocs": "* `style` — style flags",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "GetConsoleStyle()"
  },
  {
    "name": "GetConsoleWindow",
    "helpId": "GetConsoleWindow",
    "shortDescription": "return active console window",
    "version": "10.0",
    "synopsis": "id = GetConsoleWindow()",
    "functionDocs": "This function returns the currently active console window. If no console window has been made active using [SelectConsoleWindow()](https://www.hollywood-mal.com/docs/html/hollywood/SelectConsoleWindow_.html), -1 will be returned.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "* `id` — id of the active console window or -1 if the default screen is active",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "GetConsoleWindow()"
  },
  {
    "name": "HaveConsole",
    "helpId": "HaveConsole",
    "shortDescription": "check if there is a console",
    "version": "10.0",
    "synopsis": "ok = HaveConsole()",
    "functionDocs": "This function returns `True` if the program has an attached console. This is only of use when using the non-console version of Hollywood on Windows. In that case, there is initially no console but it has to be manually opened using [OpenConsole()](https://www.hollywood-mal.com/docs/html/hollywood/OpenConsole_.html). On all other platforms and in the console version of Hollywood on Windows, there'll always be a console so this function will always return `True`. See [OpenConsole](https://www.hollywood-mal.com/docs/html/hollywood/OpenConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "* `ok` — `True` if a console is available, `False` otherwise",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "HaveConsole()"
  },
  {
    "name": "HideConsoleCursor",
    "helpId": "HideConsoleCursor",
    "shortDescription": "hide console cursor",
    "version": "10.0",
    "synopsis": "HideConsoleCursor()",
    "functionDocs": "This function hides the console cursor.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "HideConsoleCursor()"
  },
  {
    "name": "InitConsoleColor",
    "helpId": "InitConsoleColor",
    "shortDescription": "init console color",
    "version": "10.0",
    "synopsis": "InitConsoleColor(pen[, fgcolor, bgcolor])",
    "functionDocs": "This function can be used to set the foreground color of the console pen specified by `pen` to `fgcolor` and the background color to `bgcolor`. The pen could then be set as the text pen using [SetConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleColor_.html). See [SetConsoleColor](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleColor_.html).\n\nThe specified pen must be greater than 0. The number of available pens depends on the console. Typically, 256 pens are available which means that the highest pen number you can use is 255 but for the best compatibility you should use lower pen numbers because not all consoles might have 256 pens.\n\nThe `fgcolor` and `bgcolor` arguments can be either [RGB values](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html) or colors allocated using [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html). Note that only a few colors are available by default and can be passed in `fgcolor` or `bgcolor` without allocation. These are: `#BLACK`, `#WHITE`, `#RED`, `#GREEN`, `#BLUE`, `#YELLOW`, `#AQUA` (cyan), and `#FUCHSIA` (magenta). If you want to use other colors, you need to allocate them first using [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html). See [AllocConsoleColor](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html).\n\nNote that terminals might choose to use a darkened version of the colors you specify here so don't be surprised if your color appears as grey even though you specified white. Many terminals are configured to treat grey as white. If you want to avoid this, allocate custom colors using [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `pen` — color pen to use\n* `fgcolor` — optional: desired foreground color; this must be either an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html) from the list above or a color allocated by [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html) (defaults to `#NOCOLOR`)\n* `bgcolor` — optional: desired background color; this must be either an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html) from the list above or a color allocated by [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html) (defaults to `#NOCOLOR`)",
    "example": "```\nEnableAdvancedConsole()\nSetConsoleStyle(#CONSOLESTYLE_BOLD)\nInitConsoleColor(1, #BLACK, #WHITE)\nSetConsoleColor(1)\nConsolePrint(\"Hello World\")\nRefreshConsole()\n```\n\nThe code above prints the string \"Hello World\" in black on white background.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "InitConsoleColor(${1:pen})"
  },
  {
    "name": "InsertConsoleChr",
    "helpId": "InsertConsoleChr",
    "shortDescription": "insert console character",
    "version": "10.0",
    "synopsis": "InsertConsoleChr(ch)",
    "functionDocs": "This function inserts the character specified by `ch` into the current console window at the current cursor position. All characters to the right of the cursor are moved to the right, with the possibility of the rightmost characters on the line being lost. The cursor is not advanced.\n\nThe character must be passed as a numeric value, not a string. For normal characters `ch` simply specifies the Unicode codepoint of the respective character, e.g. 65 for 'A'. The `ch` argument, however, can also be a special character code composed by the [MakeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html) function. This function allows you to merge text formatting styles into the character code and it also supports special character codes like arrows or border bits. See [MakeConsoleChr](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `ch` — character to insert",
    "example": "```\nEnableAdvancedConsole()\nInsertConsoleChr('A')\nRefreshConsole()\n```\n\nThe code above adds the character 'A' to the console.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "InsertConsoleChr(${1:ch})"
  },
  {
    "name": "InsertConsoleLine",
    "helpId": "InsertConsoleLine",
    "shortDescription": "insert console line",
    "version": "10.0",
    "synopsis": "InsertConsoleLine()",
    "functionDocs": "This function inserts a blank line above the current line. The bottom line is lost.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "InsertConsoleLine()"
  },
  {
    "name": "InsertConsoleStr",
    "helpId": "InsertConsoleStr",
    "shortDescription": "insert console string",
    "version": "10.0",
    "synopsis": "InsertConsoleStr(s$)",
    "functionDocs": "This function inserts the string specified by `s$` into the current console window at the current cursor position. All characters to the right of the cursor are moved to the right, with the possibility of the rightmost characters on the line being lost. The cursor is not advanced.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `s$` — string to insert",
    "example": "```\nEnableAdvancedConsole()\nInsertConsoleStr(\"Hello World!\")\nRefreshConsole()\n```\n\nThe code above prints the string \"Hello World!\" to the console.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "InsertConsoleStr(${1:s$})"
  },
  {
    "name": "MakeConsoleChr",
    "helpId": "MakeConsoleChr",
    "shortDescription": "merge style and color into character code",
    "version": "10.0",
    "synopsis": "ch = MakeConsoleChr(c[, style, pen])",
    "functionDocs": "This function can be used to create a formatted character code that can be passed to all functions that accepted a numeric character code, e.g. [InsertConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/InsertConsoleChr_.html). `MakeConsoleChr()` takes the character passed in `c` and applies the style settings passed in `style` and the color settings of the pen passed in `pen` to it.\n\nThe character must be passed by its numeric Unicode codepoint, not as a string. So for the character 'A' you would have to pass the value 65 in `c`. Alternatively, you can also pass one of the following special characters in `c`:\n\n- `#CONSOLECHR_BLOCK`: Solid block\n- `#CONSOLECHR_BOARD`: Board of squares\n- `#CONSOLECHR_BTEE`: Bottom \"T\"\n- `#CONSOLECHR_BULLET`: Bullet\n- `#CONSOLECHR_CKBOARD`: Checkerboard\n- `#CONSOLECHR_DARROW`: Down arrow\n- `#CONSOLECHR_DEGREE`: Degree symbol\n- `#CONSOLECHR_DIAMOND`: Diamond\n- `#CONSOLECHR_GEQUAL`: Greater than or equal\n- `#CONSOLECHR_HLINE`: Horizontal line\n- `#CONSOLECHR_LANTERN`: Lantern symbol\n- `#CONSOLECHR_LARROW`: Left arrow\n- `#CONSOLECHR_LEQUAL`: Less than or equal\n- `#CONSOLECHR_LLCORNER`: Lower left box corner\n- `#CONSOLECHR_LRCORNER`: Lower right box corner\n- `#CONSOLECHR_LTEE`: Left \"T\"\n- `#CONSOLECHR_NEQUAL`: Not equal\n- `#CONSOLECHR_PI`: Pi\n- `#CONSOLECHR_PLMINUS`: Plus/minus sign\n- `#CONSOLECHR_PLUS`: Plus sign, cross, or four-corner piece\n- `#CONSOLECHR_RARROW`: Right arrow\n- `#CONSOLECHR_RTEE`: Right \"T\"\n- `#CONSOLECHR_S1`: Scan line 1\n- `#CONSOLECHR_S3`: Scan line 3\n- `#CONSOLECHR_S7`: Scan line 7\n- `#CONSOLECHR_S9`: Scan line 9\n- `#CONSOLECHR_STERLING`: Pounds sterling symbol\n- `#CONSOLECHR_TTEE`: Top \"T\"\n- `#CONSOLECHR_UARROW`: Up arrow\n- `#CONSOLECHR_ULCORNER`: Upper left box corner\n- `#CONSOLECHR_URCORNER`: Upper right box corner\n- `#CONSOLECHR_VLINE`: Vertical line\n\nThe `style` parameter supports all console styles offered by the [SetConsoleStyle()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleStyle_.html) function. See [SetConsoleStyle](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleStyle_.html). If you don't want to set any style flags, you can pass the special style `#CONSOLESTYLE_NONE` for `style`. In that case, `MakeConsoleChr()` won't apply any styles.\n\nThe optional parameter `pen` can be used to define the pen that should be used to draw the character. Fore- and background colors of that pen can be initialized using the [InitConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/InitConsoleColor_.html) function. See [InitConsoleColor](https://www.hollywood-mal.com/docs/html/hollywood/InitConsoleColor_.html).\n\nTo decompose a character that contains style or color formatting into its constituents, use the [DecomposeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/DecomposeConsoleChr_.html) function. See [DecomposeConsoleChr](https://www.hollywood-mal.com/docs/html/hollywood/DecomposeConsoleChr_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `c` — character as a Unicode codepoint\n* `style` — formatting style to apply or `#CONSOLESTYLE_NONE` to ignore the argument\n* `pen` — optional: color pen to use or -1 to skip setting a pen (defaults to -1)",
    "resultsDocs": "* `ch` — formatted character code",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "MakeConsoleChr(${1:c})"
  },
  {
    "name": "MoveConsoleWindow",
    "helpId": "MoveConsoleWindow",
    "shortDescription": "move console window",
    "version": "10.0",
    "synopsis": "MoveConsoleWindow(id, x, y)",
    "functionDocs": "This function moves the console window specified by `id` to the position specified by `x` and `y`. This position must be in characters and it must not be off-screen.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `id` — id of the console window to move\n* `x` — desired x position for the window\n* `y` — desired y position for the window",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "MoveConsoleWindow(${1:id}, ${2:x}, ${3:y})"
  },
  {
    "name": "OpenConsole",
    "helpId": "OpenConsole",
    "shortDescription": "open console window",
    "version": "10.0",
    "synopsis": "OpenConsole()",
    "functionDocs": "Windows distinguishes between non-console and console programs. That's why Hollywood can compile two different types of programs on Windows: Non-console programs and console programs. The difference between non-console programs and console programs is that console programs will automatically open a console when they are started whereas non-console programs won't do that. However, it's possible to manually open a console in non-console programs by calling this function.\n\nOn all other platforms there's no such distinction between console and non-console programs which is why this function is only supported on Windows and only if you use the non-console version of Hollywood.\n\nTo close the console opened by this function, simply call the [CloseConsole()](https://www.hollywood-mal.com/docs/html/hollywood/CloseConsole_.html) function.\n\nPlease also read the chapter on [Hollywood and the console](https://www.hollywood-mal.com/docs/html/hollywood/ConsoleUsers_.html) to learn more about using Hollywood in console mode. See [Console mode](https://www.hollywood-mal.com/docs/html/hollywood/ConsoleUsers_.html).",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Windows"],
    "insertText": "OpenConsole()"
  },
  {
    "name": "ReadConsoleKey",
    "helpId": "ReadConsoleKey",
    "shortDescription": "read console key",
    "version": "10.0",
    "synopsis": "key = ReadConsoleKey()",
    "functionDocs": "This function reads a character from the current console window. By default, it will wait until the user presses a key. If you want it to return immediately in case the user hasn't pressed a key, you need to set the `Delay` option to `False` in [SetConsoleOptions()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html). In that case, `ReadConsoleKey()` will return `#CONSOLEKEY_NONE` in case no key has been pressed.\n\nIf `ReadConsoleKey()` is set to wait until a key is pressed, its behaviour is also influenced by the `CBreak` setting of [SetConsoleOptions()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html). If `CBreak` is set to `True`, which is also the default, one key press is enough to make `ReadConsoleKey()` stop blocking and return. If `CBreak` is set to `False`, however, it will block until a newline occurs.\n\nBy default, the key that the user presses is echoed in the console. If you don't want that, set the `Echo` tag in [SetConsoleOptions()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html) to `False`.\n\nFinally, `ReadConsoleKey()` can also read function keys like F1, F2, cursor keys, ESC and so on. If you want `ReadConsoleKey()` to support function keys, you must put the console into keypad mode by setting the `Keypad` tag in [SetConsoleOptions()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html) to `True`. If you have done that, `ReadConsoleKey()` can also return the following function keys:\n\n```\n#CONSOLEKEY_ENTER\n#CONSOLEKEY_UP\n#CONSOLEKEY_DOWN\n#CONSOLEKEY_RIGHT\n#CONSOLEKEY_LEFT\n#CONSOLEKEY_BACKSPACE\n#CONSOLEKEY_DEL\n#CONSOLEKEY_F1\n#CONSOLEKEY_F2\n#CONSOLEKEY_F3\n#CONSOLEKEY_F4\n#CONSOLEKEY_F5\n#CONSOLEKEY_F6\n#CONSOLEKEY_F7\n#CONSOLEKEY_F8\n#CONSOLEKEY_F9\n#CONSOLEKEY_F10\n#CONSOLEKEY_F11\n#CONSOLEKEY_F12\n#CONSOLEKEY_F13\n#CONSOLEKEY_F14\n#CONSOLEKEY_F15\n#CONSOLEKEY_F16\n#CONSOLEKEY_INSERT\n#CONSOLEKEY_HOME\n#CONSOLEKEY_END\n#CONSOLEKEY_PRINT\n#CONSOLEKEY_PAGEUP\n#CONSOLEKEY_PAGEDOWN\n#CONSOLEKEY_IC\n#CONSOLEKEY_EIC\n```\n\nAs you can see, many [SetConsoleOptions()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html) options influence the behaviour of `ReadConsoleKey()`. See [SetConsoleOptions](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "* `key` — key that has been pressed or `#CONSOLEKEY_NONE` if no key has been pressed and the console is in `NoDelay` mode",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "ReadConsoleKey()"
  },
  {
    "name": "ReadConsoleStr",
    "helpId": "ReadConsoleStr",
    "shortDescription": "read console string",
    "version": "10.0",
    "synopsis": "s$ = ReadConsoleStr()",
    "functionDocs": "This function reads a string from the current console window and returns it. In contrast to [ReadConsoleKey()](https://www.hollywood-mal.com/docs/html/hollywood/ReadConsoleKey_.html), `ReadConsoleStr()` isn't compatible with the `Delay` option of [SetConsoleOptions()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html). It will only work correctly if `Delay` is set to `True`, which is also the default. This implies that `ReadConsoleStr()` is always meant to block until there's some input on the console.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "* `s$` — string read from the console",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "ReadConsoleStr()"
  },
  {
    "name": "RefreshConsole",
    "helpId": "RefreshConsole",
    "shortDescription": "refresh console",
    "version": "10.0",
    "synopsis": "RefreshConsole()",
    "functionDocs": "This function draws the changes in the current console window to the screen. To optimize drawing, the console typically won't refresh automatically when changes are made to its contents. Instead, `RefreshConsole()` must usually be called manually to make the console redraw itself. If you want Hollywood to automatically refresh the console, you can set the `Immediate` flag to `True` in [SetConsoleOptions()](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html) but this can lead to flickery drawing.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "none",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "RefreshConsole()"
  },
  {
    "name": "ScrollConsole",
    "helpId": "ScrollConsole",
    "shortDescription": "scroll console lines",
    "version": "10.0",
    "synopsis": "ScrollConsole(n)",
    "functionDocs": "This function scrolls the console window up or down by the specified delta `n`. A positive value in `n` scrolls the console up `n` lines while a negative `n` scrolls the console down `n` lines.\n\nBefore you can use this function you must set the `Scroll` tag to `True` in [SetConsoleOptions](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html). See [SetConsoleOptions](https://www.hollywood-mal.com/docs/html/hollywood/SetConsoleOptions_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `n` — number of lines to scroll up or down; positive values scroll up, negative values scroll down",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "ScrollConsole(${1:n})"
  },
  {
    "name": "SelectConsoleWindow",
    "helpId": "SelectConsoleWindow",
    "shortDescription": "make console window active",
    "version": "10.0",
    "synopsis": "SelectConsoleWindow(id)",
    "functionDocs": "This function makes the console window specified by `id` the active one. All commands of the console library will then target this console window. The `id` parameter must be the identifier of a console window allocated by [CreateConsoleWindow()](https://www.hollywood-mal.com/docs/html/hollywood/CreateConsoleWindow_.html). See [CreateConsoleWindow](https://www.hollywood-mal.com/docs/html/hollywood/CreateConsoleWindow_.html). The special value -1 can be passed in `id` to make the default console screen the active window.\n\nMake sure that you do not confuse `SelectConsoleWindow()` with the similarly named functions [SelectBrush()](https://www.hollywood-mal.com/docs/html/hollywood/SelectBrush_.html), [SelectBGPic()](https://www.hollywood-mal.com/docs/html/hollywood/SelectBGPic_.html), [SelectAnim()](https://www.hollywood-mal.com/docs/html/hollywood/SelectAnim_.html), [SelectMask()](https://www.hollywood-mal.com/docs/html/hollywood/SelectMask_.html), and [SelectAlphaChannel()](https://www.hollywood-mal.com/docs/html/hollywood/SelectAlphaChannel_.html). All of these functions require you to call [EndSelect()](https://www.hollywood-mal.com/docs/html/hollywood/EndSelect_.html) when you are done with them, but `SelectConsoleWindow()` does not have this requirement. In fact, it works in a completely different way so you must never call [EndSelect()](https://www.hollywood-mal.com/docs/html/hollywood/EndSelect_.html) for `SelectConsoleWindow()`. If you want to return to the previously active console window, you must call `SelectConsoleWindow()` again. Calling [EndSelect()](https://www.hollywood-mal.com/docs/html/hollywood/EndSelect_.html) to restore the previously active console window will definitely not work.\n\nTo find out the currently active console window, call the [GetConsoleWindow()](https://www.hollywood-mal.com/docs/html/hollywood/GetConsoleWindow_.html) function. See [GetConsoleWindow](https://www.hollywood-mal.com/docs/html/hollywood/GetConsoleWindow_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `id` — id of the console window to make active",
    "example": "```\nEnableAdvancedConsole()\nw, h = GetConsoleSize()\nCreateConsoleWindow(1, 20, 20, (w - 20) / 2, (h - 20) / 2)\nSelectConsoleWindow(1)\nDrawConsoleBorder()\nRefreshConsole()\n```\n\nThe code above creates a new 20x20 window, draws a border around it and centers it on the screen.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "SelectConsoleWindow(${1:id})"
  },
  {
    "name": "SetAllocConsoleColor",
    "helpId": "SetAllocConsoleColor",
    "shortDescription": "change allocated color",
    "version": "10.0",
    "synopsis": "SetAllocConsoleColor(c, color)",
    "functionDocs": "This function changes a color allocated using [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html). You have to pass the color allocated by [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html) in the `c` parameter and the new color in the `color` parameter (as an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html)).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `c` — allocated color to modify\n* `color` — new color as an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html)",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "SetAllocConsoleColor(${1:c}, ${2:color})"
  },
  {
    "name": "SetConsoleBackground",
    "helpId": "SetConsoleBackground",
    "shortDescription": "set console background",
    "version": "10.0",
    "synopsis": "SetConsoleBackground(ch)",
    "functionDocs": "This function fills the background of the current console window with the character specified by `ch`. The character must be passed as a numeric value, not a string. For normal characters `ch` simply specifies the Unicode codepoint of the respective character, e.g. 65 for 'A'. The `ch` argument, however, can also be a special character code composed by the [MakeConsoleChr()](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html) function. This function allows you to merge text formatting styles into the character code and it also supports special character codes like arrows or border bits. See [MakeConsoleChr](https://www.hollywood-mal.com/docs/html/hollywood/MakeConsoleChr_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `ch` — character to use for filling",
    "example": "```\nEnableAdvancedConsole()\nSetConsoleBackground('=')\nRefreshConsole()\n```\n\nThe code above fills the console background with '=' characters.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "SetConsoleBackground(${1:ch})"
  },
  {
    "name": "SetConsoleColor",
    "helpId": "SetConsoleColor",
    "shortDescription": "set console color",
    "version": "10.0",
    "synopsis": "SetConsoleColor(pen[, fgcolor, bgcolor])",
    "functionDocs": "This function can be used to set the specified pen as the text pen. If the `fgcolor` and `bgcolor` arguments are also specified, the pen will be initialized to the colors passed in `fgcolor` and `bgcolor` before making it the text pen. This is only possible if the pen number is greater than 0. Pen 0 is reserved for the default text color. Thus, if you pass 0 in `pen`, `fgcolor` and `bgcolor` will be ignored and the text color will be reset to the console's default text color.\n\nThe number of available pens depends on the console. Typically, 256 pens are available which means that the highest pen number you can use is 255 but for the best compatibility you should use lower pen numbers because not all consoles might have 256 pens.\n\nThe `fgcolor` and `bgcolor` arguments can be either [RGB values](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html) or colors allocated using [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html). Note that only a few colors are available by default and can be passed in `fgcolor` or `bgcolor` without allocation. These are: `#BLACK`, `#WHITE`, `#RED`, `#GREEN`, `#BLUE`, `#YELLOW`, `#AQUA` (cyan), and `#FUCHSIA` (magenta). If you want to use other colors, you need to allocate them first using [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html). See [AllocConsoleColor](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html).\n\nNote that terminals might choose to use a darkened version of the colors you specify here so don't be surprised if your color appears as grey even though you specified white. Many terminals are configured to treat grey as white. If you want to avoid this, allocate custom colors using [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html).\n\nTo initialize the foreground and background color of a pen without making it the active text pen, you can use the [InitConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/InitConsoleColor_.html) function. See [InitConsoleColor](https://www.hollywood-mal.com/docs/html/hollywood/InitConsoleColor_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `pen` — color pen to use or 0 to reset text color to default\n* `fgcolor` — optional: desired foreground color for the pen; this must be either an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html) from the list above or a color allocated by [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html) (defaults to `#NOCOLOR`)\n* `bgcolor` — optional: desired background color for the pen; this must be either an [RGB color](https://www.hollywood-mal.com/docs/html/hollywood/RGBInfo_.html) from the list above or a color allocated by [AllocConsoleColor()](https://www.hollywood-mal.com/docs/html/hollywood/AllocConsoleColor_.html) (defaults to `#NOCOLOR`)",
    "example": "```\nEnableAdvancedConsole()\nSetConsoleStyle(#CONSOLESTYLE_BOLD)\nSetConsoleColor(1, #BLACK, #WHITE)\nConsolePrint(\"Hello World\")\nRefreshConsole()\n```\n\nThe code above prints the string \"Hello World\" in black on white background.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "SetConsoleColor(${1:pen})"
  },
  {
    "name": "SetConsoleCursor",
    "helpId": "SetConsoleCursor",
    "shortDescription": "set console cursor position",
    "version": "10.0",
    "synopsis": "SetConsoleCursor(x, y)",
    "functionDocs": "This function moves the cursor of the current window to the location specified by `x` and `y`. This does not move the physical cursor of the terminal until [RefreshConsole()](https://www.hollywood-mal.com/docs/html/hollywood/RefreshConsole_.html) is called. The position specified is relative to the upper left corner of the window, which is (0,0).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `x` — desired x position\n* `y` — desired y position",
    "example": "```\nEnableAdvancedConsole()\nw, h = GetConsoleSize()\ns$ = \"Hello World!\"\nSetConsoleCursor((w - StrLen(s$)) / 2, h / 2)\nConsolePrintNR(s$)\nRefreshConsole()\n```\n\nThe code above prints the string \"Hello World\" centered in the console.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "SetConsoleCursor(${1:x}, ${2:y})"
  },
  {
    "name": "SetConsoleOptions",
    "helpId": "SetConsoleOptions",
    "shortDescription": "configure console settings",
    "version": "10.0",
    "synopsis": "SetConsoleOptions(table)",
    "functionDocs": "This function can be used to configure several settings that determine how the console should behave in advanced console mode. You must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).\n\n`SetConsoleOptions()` accepts a single table argument that can contain the following tags:\n\n- `Delay`: If this tag is set to `False`, [ReadConsoleKey()](https://www.hollywood-mal.com/docs/html/hollywood/ReadConsoleKey_.html) won't wait until a key is pressed but will return immediately if no key is pressed. Defaults to `True`.\n\n- `HalfDelay`: When `Delay` is set to `True`, `HalfDelay` can be used to specify a time limit to be specified, in tenths of a second. This causes [ReadConsoleKey()](https://www.hollywood-mal.com/docs/html/hollywood/ReadConsoleKey_.html) to block for that period before returning `#CONSOLEKEY_NONE` if no key has been received. If set, this value must be between 1 and 255.\n\n- `Echo`: If this tag is set to `False`, typed characters won't be echoed in the console. Defaults to `True`.\n\n- `Keypad`: If this tag is set to `True`, [ReadConsoleKey()](https://www.hollywood-mal.com/docs/html/hollywood/ReadConsoleKey_.html) will also be able to read function keys like F1, F2, cursor keys, ESC, etc. Defaults to `False`.\n\n- `Scroll`: If this tag is set to `True`, the console will automatically scroll the console when writing past the end of the console window. Defaults to `False`.\n\n- `Clear`: If this tag is set to `True`, [RefreshConsole()](https://www.hollywood-mal.com/docs/html/hollywood/RefreshConsole_.html) will clear the screen completely and redraw the entire screen. Defaults to `False`.\n\n- `Leave`: If this tag is set to `True`, the cursor will be left wherever a screen update happens to leave it. This can be useful for applications where the cursor is not used, since it reduces the need for cursor motions. If possible, the cursor is made invisible when this option is enabled. Defaults to `False`.\n\n- `Immediate`: If this tag is set to `True`, the console window will be refreshed every time a change is made to it. Defaults to `False`.\n\n- `CBreak`: When `Delay` is set to `True`, `CBreak` controls which characters can make [ReadConsoleKey()](https://www.hollywood-mal.com/docs/html/hollywood/ReadConsoleKey_.html) stop blocking and return. If `CBreak` is set to `True`, one key press will be enough to make [ReadConsoleKey()](https://www.hollywood-mal.com/docs/html/hollywood/ReadConsoleKey_.html) stop blocking and return. If `CBreak` is set to `False`, however, [ReadConsoleKey()](https://www.hollywood-mal.com/docs/html/hollywood/ReadConsoleKey_.html) will block until a newline occurs.\n\n- `Newline`: If this is set to `True`, newlines are translated to carriage returns on input. If you don't want that, set `Newline` to `False`. Defaults to `True`.",
    "inputsDocs": "* `table` — table containing one or more settings to modify (see above)",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "SetConsoleOptions(${1:table})"
  },
  {
    "name": "SetConsoleStyle",
    "helpId": "SetConsoleStyle",
    "shortDescription": "set console style",
    "version": "10.0",
    "synopsis": "SetConsoleStyle(style)",
    "functionDocs": "This function sets the style of the current console window to the one passed in the `style` parameter. This can be one or more of the following flags:\n\n- `#CONSOLESTYLE_NORMAL`: Reset text style to default. This cannot be combined with any other styles.\n- `#CONSOLESTYLE_BOLD`: Make text bold.\n- `#CONSOLESTYLE_ITALIC`: Make text italic.\n- `#CONSOLESTYLE_UNDERLINED`: Underline text.\n- `#CONSOLESTYLE_STANDOUT`: Highlight text.\n- `#CONSOLESTYLE_BLINK`: Make text blink.\n- `#CONSOLESTYLE_REVERSE`: Reverse video on text.\n- `#CONSOLESTYLE_DIM`: Half bright effect for text. This is not supported everywhere.\n- `#CONSOLESTYLE_PROTECT`: Protected mode for text. This is not supported everywhere.\n- `#CONSOLESTYLE_INVISIBLE`: Invisible text. This is not supported everywhere.\n- `#CONSOLESTYLE_ALTCHARSET`: Use the alternate character set.\n\nNote that all style flags are bit masks so you can combine multiple styles using the bitwise OR operator (`|`).\n\nTo clear console one or more console styles, use the [ClearConsoleStyle()](https://www.hollywood-mal.com/docs/html/hollywood/ClearConsoleStyle_.html) function. See [ClearConsoleStyle](https://www.hollywood-mal.com/docs/html/hollywood/ClearConsoleStyle_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `style` — one or more style flags to set (see above)",
    "example": "```\nEnableAdvancedConsole()\nSetConsoleStyle(#CONSOLESTYLE_BOLD|#CONSOLESTYLE_UNDERLINED)\nConsolePrint(\"Hello World!\")\nRefreshConsole()\n```\n\nThe code above prints the text \"Hello World!\" in bold and underlined style.",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "SetConsoleStyle(${1:style})"
  },
  {
    "name": "SetConsoleTitle",
    "helpId": "SetConsoleTitle",
    "shortDescription": "set console title",
    "version": "10.0",
    "synopsis": "SetConsoleTitle(t$)",
    "functionDocs": "This function changes the title of the console window to the text specified in `t$`. This is currently only supported on Windows.",
    "inputsDocs": "* `t$` — new title for the console window",
    "resultsDocs": "none",
    "platforms": ["Windows"],
    "insertText": "SetConsoleTitle(${1:t$})"
  },
  {
    "name": "ShowConsoleCursor",
    "helpId": "ShowConsoleCursor",
    "shortDescription": "show console cursor",
    "version": "10.0",
    "synopsis": "ShowConsoleCursor([normal])",
    "functionDocs": "This function can be used to show the console cursor. The optional `normal` argument can be used to set whether you'd like to have the normal or the block cursor. If `normal` is set to `True`, the normal cursor will be shown. If it is set to `False`, the block cursor will be used. By default, `ShowConsoleCursor()` will show the normal cursor.\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `normal` — optional: whether to show the normal or the block cursor (defaults to `True`, which means show the normal cursor)",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "ShowConsoleCursor()"
  },
  {
    "name": "StartConsoleColorMode",
    "helpId": "StartConsoleColorMode",
    "shortDescription": "put console into color mode",
    "version": "10.0",
    "synopsis": "StartConsoleColorMode([defcolor])",
    "functionDocs": "This function puts the console in color mode. Normally, it's not necessary to call this function because all console library functions that operate in color mode will enable color mode automatically. There's one exception, though: If you don't want to use the default colors, you have to start color mode manually and set the `defcolor` argument to `False`. In that case color mode will be enabled but without using the default colors. Note that if you do that, it's important to call `StartConsoleColorMode()` before any other console library functions that might enable color mode so if you use this function the best idea is to call it right after [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `defcolor` — optional: whether or not to use the default colors (defaults to `True`)",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "StartConsoleColorMode()"
  },
  {
    "name": "TouchConsoleWindow",
    "helpId": "TouchConsoleWindow",
    "shortDescription": "touch console window",
    "version": "10.0",
    "synopsis": "TouchConsoleWindow(id)",
    "functionDocs": "This function marks the whole console window specified by `id` as needing refresh. By default, only the areas in the window that have changed are marked for refresh. If you want to force a refresh of the whole window, call `TouchConsoleWindow()` on it.\n\nThe `id` parameter must be the identifier of a console window allocated by [CreateConsoleWindow()](https://www.hollywood-mal.com/docs/html/hollywood/CreateConsoleWindow_.html). See [CreateConsoleWindow](https://www.hollywood-mal.com/docs/html/hollywood/CreateConsoleWindow_.html).\n\nYou must enable advanced console mode using [EnableAdvancedConsole()](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html) before you can use this function. See [EnableAdvancedConsole](https://www.hollywood-mal.com/docs/html/hollywood/EnableAdvancedConsole_.html).",
    "inputsDocs": "* `id` — id of the console window to use",
    "resultsDocs": "none",
    "platforms": ["Linux", "macOS", "Windows"],
    "insertText": "TouchConsoleWindow(${1:id})"
  }
]
