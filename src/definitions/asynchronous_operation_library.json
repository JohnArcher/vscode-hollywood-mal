[
  {
    "name": "AsyncDrawFrame",
    "helpId": "AsyncDrawFrame",
    "shortDescription": "draw the next frame of an asynchronous object",
    "version": "4.0",
    "synopsis": "finish = AsyncDrawFrame(id[, frame])",
    "functionDocs": "This function can be used to draw the next frame of an asynchronous draw object created by one of functions from the transition effect or move object libraries. `AsyncDrawFrame()` will return `False` if there are frames left in its queue. Thus, you should normally call this function until it returns `True`, which means that you have now drawn all frames that were in the asynchronous draw object's queue.\n\nWhen this function returns `True`, it automatically deletes the asynchronous draw object so that is no longer valid and can no longer be used. If you want to stop an asynchronous drawing sequence before all frames have been drawn, you can use the [CancelAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/CancelAsyncDraw_.html) function. If you want to stop an asynchronous drawing object and make it execute its finishing code, you have to use the [FinishAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/FinishAsyncDraw_.html) function.\n\nStarting with Hollywood 4.5, `AsyncDrawFrame()` accepts an optional argument which allows you to explicitly specify which frame you want to have drawn. To find out the number of frames of an asynchronous draw object, you have to call [GetAttribute()](https://www.hollywood-mal.com/docs/html/hollywood/GetAttribute_.html) on it using `#ATTRNUMFRAMES`. The value you get from this call is the largest valid frame number. To draw the first frame, you have to pass 1. To draw the next frame, pass the value 0 which is also the default and used if the frame argument is omitted.\n\nIf you manually specify the frame to draw, you also need to pay attention that your asynchronous drawing object is freed correctly. If you do not use the optional argument, the async drawing object is automatically freed when `AsyncDrawFrame()` returns `True`. If you specify a frame manually, the async draw object is never freed. Even if you specify the last frame, Hollywood will not free the async draw object because it must be possible to seek to the last frame and back to the another frame. If Hollywood automatically freed the async draw object if you chose to draw the last frame, then this would not be possible. So if you are manually setting the current frame, make sure that you call [FinishAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/FinishAsyncDraw_.html) on the asynchronous drawing object when you are done.\n\nPlease note that currently some restrictions apply to this function:\n\n1. Asynchronous frames can only be drawn to the main display window. You cannot use this function to draw to brushes currently.\n\n2. While there are asynchronous draw objects, you cannot switch the layer mode. Calls to [EnableLayers()](https://www.hollywood-mal.com/docs/html/hollywood/EnableLayers_.html) or [DisableLayers()](https://www.hollywood-mal.com/docs/html/hollywood/DisableLayers_.html) will be disabled while asynchronous draw objects are active.\n\n3. You cannot switch background pictures while there are asynchronous draw objects.\n\n4. Frame seeking only works with asynchronous drawing objects that are associated with a layer.\n\n5. Frame seeking does only work with asynchronous drawing objects of type `#ADF_FX`.",
    "inputsDocs": "* `id` — identifier of the asynchronous draw object to use\n* `frame` — optional: the frame you wish to draw; works only with async draw objects associated with a layer (V4.5)",
    "resultsDocs": "* `finish` — `False` if there are more frames left to be drawn or `True` if the asynchronous draw object has finished",
    "example": "```\nobj = DisplayBrushFX(1, #CENTER, #CENTER, {Type = #WATER1, Async = True})\nRepeat\n   done = AsyncDrawFrame(obj)\n   VWait\nUntil done = True\n```\n\nThe code above displays brush 1 in the center of the screen with the `#WATER1` transition effect. As you can see, the effect is not displayed by [DisplayBrushFX()](https://www.hollywood-mal.com/docs/html/hollywood/DisplayBrushFX_.html) but in the `AsyncDrawFrame()` loop below so that you could do some other things as well during the transition effect.\n\n---\n\n```\nEnableLayers\nDisplayBrush(1, #CENTER, #CENTER)\nobj = ShowLayerFX(1, {Type = #WALLPAPERTOP, Async = True})\nframes = GetAttribute(#ASYNCDRAW, obj, #ATTRNUMFRAMES)\nFor Local k = frames To 1 Step -1\n   AsyncDrawFrame(obj, k)\n   VWait\nNext\nFor Local k = 1 To frames\n   AsyncDrawFrame(obj, k)\n   VWait\nNext\nFinishAsyncDraw(obj)\n```\n\nThe code above shows brush number 1 using `#WALLPAPERTOP`. The effect is first displayed the other way round and then in normal order. Note that we have to manually free the draw object using [FinishAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/FinishAsyncDraw_.html).",
    "platforms": ["All"],
    "insertText": "AsyncDrawFrame(${1:id})"
  },
  {
    "name": "CancelAsyncDraw",
    "helpId": "CancelAsyncDraw",
    "shortDescription": "cancel asynchronous drawing object",
    "version": "4.0",
    "synopsis": "CancelAsyncDraw(id)",
    "functionDocs": "This function can be used to preliminary cancel an asynchronous draw object. See [AsyncDrawFrame](https://www.hollywood-mal.com/docs/html/hollywood/AsyncDrawFrame_.html).\n\nIf the asynchronous draw object you want to stop is associated with a layer, then calling `CancelAsyncDraw()` will not execute the finishing code for your draw object. For example, if you are removing a layer with an asynchronous effect (i.e. you retrieved your asynchronous draw object from [RemoveLayerFX()](https://www.hollywood-mal.com/docs/html/hollywood/RemoveLayerFX_.html)), then the layer won't be removed if you call `CancelAsyncDraw()`. The same applies to [HideLayerFX()](https://www.hollywood-mal.com/docs/html/hollywood/HideLayerFX_.html) (layer won't be hidden if you cancel the asynchronous draw object halfway through) and [ShowLayerFX()](https://www.hollywood-mal.com/docs/html/hollywood/ShowLayerFX_.html) (layer won't be shown if you cancel the asynchronous draw object).\n\nIf you do not want this behaviour, you have to use [FinishAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/FinishAsyncDraw_.html) instead. [FinishAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/FinishAsyncDraw_.html) will first call the finishing code for the asynchronous draw object and then it will free the draw object. This means that if you execute [FinishAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/FinishAsyncDraw_.html) on a drawing object received from [RemoveLayerFX()](https://www.hollywood-mal.com/docs/html/hollywood/RemoveLayerFX_.html), the layer will be removed even if the effect is not finished yet. [FinishAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/FinishAsyncDraw_.html) will jump to the last frame, call the finishing code (i.e. remove layer, or hide layer, or show layer) and free the drawing object.\n\nPlease note that there is no difference at all between `CancelAsyncDraw()` and [FinishAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/FinishAsyncDraw_.html) if layers are disabled. In case layers are off, you should always use `CancelAsyncDraw()`.",
    "inputsDocs": "* `id` — identifier of the object to cancel",
    "resultsDocs": "none",
    "platforms": ["All"],
    "insertText": "CancelAsyncDraw(${1:id})"
  },
  {
    "name": "CancelAsyncOperation",
    "helpId": "CancelAsyncOperation",
    "shortDescription": "cancel an asynchronous operation",
    "version": "9.0",
    "synopsis": "CancelAsyncOperation(id)",
    "functionDocs": "This function cancels the asynchronous operation specified by `id`. `id` must be set to an asynchronous operation handle created by functions which support asynchronous operations, e.g. [CopyFile()](https://www.hollywood-mal.com/docs/html/hollywood/CopyFile_.html) or [DownloadFile()](https://www.hollywood-mal.com/docs/html/hollywood/DownloadFile_.html).",
    "inputsDocs": "* `id` — asynchronous operation handle obtained from a function that supports asynchronous operations",
    "example": "See [ContinueAsyncOperation](https://www.hollywood-mal.com/docs/html/hollywood/ContinueAsyncOperation_.html)",
    "platforms": ["All"],
    "insertText": "CancelAsyncOperation(${1:id})"
  },
  {
    "name": "ContinueAsyncOperation",
    "helpId": "ContinueAsyncOperation",
    "shortDescription": "continue an asynchronous operation",
    "version": "9.0",
    "synopsis": "done, ... = ContinueAsyncOperation(id)",
    "functionDocs": "This function continues processing the asynchronous object specified by `id`. `id` must be set to an asynchronous operation handle created by functions which support asynchronous operations, e.g. [CopyFile()](https://www.hollywood-mal.com/docs/html/hollywood/CopyFile_.html) or [DownloadFile()](https://www.hollywood-mal.com/docs/html/hollywood/DownloadFile_.html).\n\nOnce the asynchronous operation has finished, `ContinueAsyncOperation()` will free the asynchronous operation handle and return `True`. If `ContinueAsyncOperation()` returns `False`, the operation hasn't finished yet and you need to call `ContinueAsyncOperation()` again until it returns `True`.\n\nIf the Hollywood call that created the asynchronous operation handle returns values to the script on completion, `ContinueAsyncOperation()` will forward those values to your script as soon as the asynchronous operation has finished, i.e. when `done` becomes `True`. In that case, `ContinueAsyncOperation()` may return additional values depending on the command that created the asynchronous operation handle. For example, [DownloadFile()](https://www.hollywood-mal.com/docs/html/hollywood/DownloadFile_.html) will return the downloaded data as well as its length to the script on completion.\n\nTo abort an asynchronous operation, you can use the [CancelAsyncOperation()](https://www.hollywood-mal.com/docs/html/hollywood/CancelAsyncOperation_.html) function. See [CancelAsyncOperation](https://www.hollywood-mal.com/docs/html/hollywood/CancelAsyncOperation_.html).",
    "inputsDocs": "* `id` — asynchronous operation handle obtained from a function that supports asynchronous operations",
    "resultsDocs": "* `done` — `True` if the operation has finished, `False` otherwise\n* `...` — optional: on completion, i.e. when `done` is `True`, all additional return values from the command that created the asynchronous operation handle",
    "example": "```\nhandle = CopyFile(\"images\", \"sounds\", {Async = True})\nRepeat\n    NextFrame(1)\nUntil ContinueAsyncOperation(handle) = True\n```\n\nThe code above demonstrates how to show an animation while copying the `images` directory into the `sounds` directory.",
    "platforms": ["All"],
    "insertText": "ContinueAsyncOperation(${1:id})"
  },
  {
    "name": "FinishAsyncDraw",
    "helpId": "FinishAsyncDraw",
    "shortDescription": "finish asynchronous drawing object",
    "version": "4.5",
    "synopsis": "FinishAsyncDraw(id)",
    "functionDocs": "This function can be used to finish an asynchronous drawing object. When calling this function, Hollywood will skip to the last frame of the asynchronous drawing object and finish it. \"Finishing\" an asynchronous drawing object means drawing its last frame, running the finishing code (for example, removing the layer if the asynchronous drawing object belongs to a [RemoveLayerFX()](https://www.hollywood-mal.com/docs/html/hollywood/RemoveLayerFX_.html) call), and then freeing the asynchronous drawing object.\n\nThere is a difference between `FinishAsyncDraw()` and [CancelAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/CancelAsyncDraw_.html). See [CancelAsyncDraw](https://www.hollywood-mal.com/docs/html/hollywood/CancelAsyncDraw_.html).. An exception is when layers are enabled. In that case there is no difference between [CancelAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/CancelAsyncDraw_.html) and `FinishAsyncDraw()`. In case layers are off, you should always use [CancelAsyncDraw()](https://www.hollywood-mal.com/docs/html/hollywood/CancelAsyncDraw_.html).\n\nNote that typically you only have to call `FinishAsyncDraw()` when passing specific frame numbers to [AsyncDrawFrame()](https://www.hollywood-mal.com/docs/html/hollywood/AsyncDrawFrame_.html). If you keep calling [AsyncDrawFrame()](https://www.hollywood-mal.com/docs/html/hollywood/AsyncDrawFrame_.html) until it returns `True`, it will automatically finish and free the asynchronous draw object and you don't have to call `FinishAsyncDraw()` at all. See [AsyncDrawFrame](https://www.hollywood-mal.com/docs/html/hollywood/AsyncDrawFrame_.html).",
    "inputsDocs": "* `id` — identifier of the object to finish",
    "resultsDocs": "none",
    "platforms": ["All"],
    "insertText": "FinishAsyncDraw(${1:id})"
  }
]
